{"version":3,"sources":["webpack:///./src/components/TaxReportCA.tsx","webpack:///./src/components/BalanceSheet.tsx","webpack:///./src/components/ProfitAndLoss.tsx","webpack:///./src/components/SalePDF.tsx","webpack:///./src/components/TaxReportAU.tsx","webpack:///./src/components/TaxReportCA_BC.tsx","webpack:///./src/components/TaxReportCA_MB.tsx","webpack:///./src/components/TaxReportCA_QC.tsx","webpack:///./src/components/TaxReportCA_SK.tsx","webpack:///./src/components/TaxReportIE.tsx","webpack:///./src/components/TaxReportNZ.tsx","webpack:///./src/components/PDF.tsx","webpack:///./src/web/PDFDownloadLink-web.tsx","webpack:///./src/components/PDFView.tsx","webpack:///./src/components/Reports.tsx","webpack:///./src/components/TransactionTaxes.tsx"],"names":["TaxReport","summary","setSummary","preset","setPreset","startDate","setStartDate","endDate","setEndDate","line104","setLine104","line107","setLine107","line110","setLine110","line111","setLine111","line205","setLine205","line405","setLine405","formErrors","setFormErrors","info","setInfo","error","setError","nonce","setNonce","amounts","data","errors","Object","keys","length","validate","inputs","items","result","sales","taxTotals","totals","purchases","lines","refund","exchangeRates","forEach","item","drcr","Credit","push","field","group","getSums","map","amount","parentAmount","currency","reportInfo","then","Date","now","catch","e","toString","report","size","style","page","fontSize","fixed","title","key","marginBottom","width","innerStyle","borderBottomWidth","LineItemSummary","label","LineItem","rates","renderReport","className","scope","htmlFor","type","name","checked","onChange","target","value","range","_key","filename","Debit","BalanceSheet","setCurrency","Subdivision","subdivision","assets","current","Subtotals","nonCurrent","Totals","liabilities","netAssets","equity","accounts","SubdivisionLog","text","groups","indent","hasItems","accountId","openingBalance","money","index","accountTitle","id","txnType","TypeInfo","shortLabel","txnId","marginRight","textAlign","txnDate","maxLines","actorTitle","txnDescription","description","paddingBottom","closingBalance","wrap","paddingTop","borderTopWidth","borderColor","position","ProfitAndLoss","hasOperations","DivisionSummary","netLabel","division","operations","hasDepreciation","depreciation","ebit","hasInterestTax","interestTax","netProfit","DivisionDetail","revenues","expenses","netTotals","SalePDF","props","argId","test","arg1","Number","mounted","transaction","query","findById","whereIn","Sale","Invoice","withGraphJoined","withGraphFetched","Promise","reject","$fetchGraph","brackets","taxIds","customerTitle","actor","customerAddress","address","customerTaxIdLabel","taxIdLabel","customerTaxId","taxId","ownTitle","variables","get","ownAddress","ownTaxIds","date","due","elements","subTotal","taxes","total","payments","paidAmount","dueAmount","children","parentId","parent","p","taxCode","typeAndRateLabel","rate","showLine","showTaxId","isEU","variant","euReverseChargeSale","tag","euCommunityGoods","baseCode","authority","taxAuthority","taxIdVariableName","k","sort","b","settledBy","rowStyle","borderStyle","notes","flexDirection","marginLeft","a","marginTop","t","line","bottom","left","right","to","g7","setG7","g15","setG15","g18","setG18","accrual","parsed","exportSales","otherFreeSales","inputTaxedSales","capitalPurchases","inputTaxedPurchases","freePurchases","g","taxInfo","grossAmount","SummaryG","comment","gross","G","commission","setCommission","inputH","setInputH","inputI","setInputI","h","i","useTax","Math","min","outstanding","setOutstanding","cash","intraEuGoodsSales","intraEuServicesSales","intraEuGoodsPurchases","intraEuServicesPurchases","line9","setLine9","line13","setLine13","zeroSales","Styles","create","fontFamily","padding","T","B","Tr","marginHorizontal","Th","style0","ThLeft","rest","ThRight","Td","TdLeft","TdRight","PDFDownloadLink","download","href","url","pdfjsWebViewer","pdfjsWorker","pdfjs","PDFView","document","params","Viewer","window","GlobalWorkerOptions","workerPort","container","scale","setScale","viewer","setViewer","zoom","delta","currentScale","eventBus","EventBus","on","source","pdfViewer","PDFViewer","getDocument","promise","setDocument","onClick","toFixed","ref","CURRENCY_TOTALS_WRAP","DateRange","parsedStartDate","parsedEndDate","selected","dateOnly","selectsStart","dateFormat","selectsEnd","ReportHeader","format","monthBeforeDate","interval","toLocaleDateString","month","year","day","startOptions","endOptions","Intl","DateTimeFormat","hour","minute","top","ExchangeRates","primary","parts","other","join","transactionTaxes","authorities","region","regionName","outputs","TransactionTaxesDetail","cashBasis","setCashBasis","GroupItems","GroupTotal","parentDescription","reportLabel","taxMoney"],"mappings":"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","file":"dynamic.js","sourcesContent":["/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Transaction, toFormatted,\n    datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype Inputs = {\n    line104: number, line107: number, line110: number, line111: number, line205: number, line405: number\n}\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    sales: TaxItemGroup\n    purchases: TaxItemGroup\n    lines: Record<number | string, number>\n    refund: boolean\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, inputs: Inputs) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, true, ['CA:'])\n    const result: ReportInfo = { startDate, endDate,\n        sales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        refund: false,\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'CAD')\n        if (item.drcr == Transaction.Credit) {\n            result.sales.items.push(item)\n        }\n        else {\n            result.purchases.items.push(item)\n        }\n    })\n\n    ;['sales', 'purchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.parentAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'CAD'}]\n            group.totals = [{amount: 0, currency: 'CAD'}]\n        }\n    })\n\n    result.lines[101] = result.sales.totals[0].amount\n    result.lines[103] = result.sales.taxTotals[0].amount\n    result.lines[104] = inputs.line104\n    result.lines[105] = result.lines[103] + result.lines[104]\n\n    result.lines[106] = result.purchases.taxTotals[0].amount\n    result.lines[107] = inputs.line107\n    result.lines[108] = result.lines[106] + result.lines[107]\n    result.lines[109] = result.lines[105] - result.lines[108]\n\n    result.lines[110] = inputs.line110\n    result.lines[111] = inputs.line111\n    result.lines[112] = result.lines[110] + result.lines[111]\n    result.lines['113a'] = result.lines[109] - result.lines[112]\n\n    result.lines[205] = inputs.line205\n    result.lines[405] = inputs.line405\n    result.lines['113b'] = result.lines[205] + result.lines[405]\n    result.lines['113c'] = result.lines['113a'] + result.lines['113b']\n\n    if (result.lines['113c'] >= 0) {\n        result.lines[115] = result.lines['113c']\n    }\n    else {\n        result.lines[114] = -result.lines['113c']\n        result.refund = true\n    }\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [line104, setLine104] = React.useState<string>('')\n    const [line107, setLine107] = React.useState<string>('')\n    const [line110, setLine110] = React.useState<string>('')\n    const [line111, setLine111] = React.useState<string>('')\n    const [line205, setLine205] = React.useState<string>('')\n    const [line405, setLine405] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'CAD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {line104, line107, line110, line111, line205, line405}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Inputs = amounts as any // typecast\n            reportInfo(startDate, endDate, parsed).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, ...debounce([line104, line107, line110, line111, line205, line405])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>GST/HST Return Working Copy</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-line104'>\n            <th scope='row'>\n                <label htmlFor='line104'>Line 104 | Adjustments to be added:</label>\n            </th><td>\n                <input name='line104' onChange={e => {setLine104(e.target.value)}}></input> CAD\n                {formErrors['line104'] && <div className='error'>{formErrors['line104']}</div>}\n            </td>\n        </tr><tr className='row row-line107'>\n            <th scope='row'>\n                <label htmlFor='line107'>Line 107 | Adjustments to be deducted:</label>\n            </th><td>\n                <input name='line107' onChange={e => {setLine107(e.target.value)}}></input> CAD\n                {formErrors['line107'] && <div className='error'>{formErrors['line107']}</div>}\n            </td>\n        </tr><tr className='row row-line110'>\n            <th scope='row'>\n                <label htmlFor='line110'>Line 110 | Instalment and other annual filer payments:</label>\n            </th><td>\n                <input name='line110' onChange={e => {setLine110(e.target.value)}}></input> CAD\n                {formErrors['line110'] && <div className='error'>{formErrors['line110']}</div>}\n            </td>\n        </tr><tr className='row row-line111'>\n            <th scope='row'>\n                <label htmlFor='line111'>Line 111 | GST and HST rebates:</label>\n            </th><td>\n                <input name='line111' onChange={e => {setLine111(e.target.value)}}></input> CAD\n                {formErrors['line111'] && <div className='error'>{formErrors['line111']}</div>}\n            </td>\n        </tr><tr className='row row-line205'>\n            <th scope='row'>\n                <label htmlFor='line205'>Line 205 | GST/HST due on acquisition of taxable real property:</label>\n            </th><td>\n                <input name='line205' onChange={e => {setLine205(e.target.value)}}></input> CAD\n                {formErrors['line205'] && <div className='error'>{formErrors['line205']}</div>}\n            </td>\n        </tr><tr className='row row-line405'>\n            <th scope='row'>\n                <label htmlFor='line405'>Line 405 | Other GST/HST to be self-assessed:</label>\n            </th><td>\n                <input name='line405' onChange={e => {setLine405(e.target.value)}}></input> CAD\n                {formErrors['line405'] && <div className='error'>{formErrors['line405']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='GST-HST-return-working-copy.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`GST/HST Return Working Copy${summary ? '' : ': Detail'}`} />\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='Line 101 | Sales and other revenue' amount={info.lines[101]} />\n            <LineItemSummary label='Line 103 | GST and HST amounts you collected or is collectible' amount={info.lines[103]} />\n            <LineItemSummary label='Line 104 | Adjustments to be added' amount={info.lines[104]} />\n            <LineItemSummary label='Line 105 | Total GST/HST and adjustments (add lines 103 and 104)' amount={info.lines[105]} />\n\n            <LineItemSummary label='Line 106 | GST/HST you paid or is payable' amount={info.lines[106]} />\n            <LineItemSummary label='Line 107 | Adjustments to be deducted' amount={info.lines[107]} />\n            <LineItemSummary label='Line 108 | Total ITCs and adjustments (add lines 106 and 107)' amount={info.lines[108]} />\n            <LineItemSummary label='Line 109 | Net tax (subtract line 108 from line 105)' amount={info.lines[109]} />\n\n            <LineItemSummary label='Line 110 | Instalment and other annual filer payments' amount={info.lines[110]} />\n            <LineItemSummary label='Line 111 | GST and HST rebates' amount={info.lines[111]} />\n            <LineItemSummary label='Line 112 | Total other credits (add lines 110 and 111)' amount={info.lines[112]} />\n            <LineItemSummary label='Line 113 A | Balance (subtract line 112 from line 109)' amount={info.lines['113a']} />\n\n            <LineItemSummary label='Line 205 | GST/HST due on acquisition of taxable real property' amount={info.lines[205]} />\n            <LineItemSummary label='Line 405 | Other GST/HST to be self-assessed' amount={info.lines[405]} />\n            <LineItemSummary label='Line 113 B | Total other debits (add lines 205 and 405)' amount={info.lines['113b']} />\n            <LineItemSummary label='Line 113 C | Balance (add lines 113 A and 113 B)' amount={info.lines['113c']} />\n\n            {info.refund ? <LineItemSummary label='Line 114 | Refund claimed' amount={info.lines[114]} />\n                : <LineItemSummary label='Line 115 | Payment enclosed' amount={info.lines[115]} />\n            }\n        </> : <>\n            {info.sales.items.length > 0 && <>\n                <Tr><Th width={100}>Sales</Th></Tr>\n                <GroupItems group={info.sales} />\n                <GroupTotal group={info.sales} />\n            </>}\n            <LineItem label='Line 101 | Sales and other revenue' amount={info.lines[101]} />\n            <LineItem label='Line 103 | GST and HST amounts you collected or is collectible' amount={info.lines[103]} />\n            <LineItem label='Line 104 | Adjustments to be added' amount={info.lines[104]} />\n            <LineItem label='Line 105 | Total GST/HST and adjustments (add lines 103 and 104)' amount={info.lines[105]} />\n\n            {info.purchases.items.length > 0 && <>\n                <Tr><Th width={100}>Purchases</Th></Tr>\n                <GroupItems group={info.purchases} />\n                <GroupTotal group={info.purchases} />\n            </>}\n            <LineItem label='Line 106 | GST/HST you paid or is payable' amount={info.lines[106]} />\n            <LineItem label='Line 107 | Adjustments to be deducted' amount={info.lines[107]} />\n            <LineItem label='Line 108 | Total ITCs and adjustments (add lines 106 and 107)' amount={info.lines[108]} />\n            <LineItem label='Line 109 | Net tax (subtract line 108 from line 105)' amount={info.lines[109]} />\n\n            <LineItem label='Line 110 | Instalment and other annual filer payments' amount={info.lines[110]} />\n            <LineItem label='Line 111 | GST and HST rebates' amount={info.lines[111]} />\n            <LineItem label='Line 112 | Total other credits (add lines 110 and 111)' amount={info.lines[112]} />\n            <LineItem label='Line 113 A | Balance (subtract line 112 from line 109)' amount={info.lines['113a']} />\n\n            <LineItem label='Line 205 | GST/HST due on acquisition of taxable real property' amount={info.lines[205]} />\n            <LineItem label='Line 405 | Other GST/HST to be self-assessed' amount={info.lines[405]} />\n            <LineItem label='Line 113 B | Total other debits (add lines 205 and 405)' amount={info.lines['113b']} />\n            <LineItem label='Line 113 C | Balance (add lines 113 A and 113 B)' amount={info.lines['113c']} />\n\n            {info.refund ? <LineItem label='Line 114 | Refund claimed' amount={info.lines[114]} />\n                : <LineItem label='Line 115 | Payment enclosed' amount={info.lines[115]} />\n            }\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n\nexport function LineItem({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={85}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'CAD')} CAD</ThRight>\n    </Tr>\n}\n\nexport function LineItemSummary({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={65}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'CAD')} CAD</ThRight>\n    </Tr>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, B, T, Tr, Th, ThLeft, ThRight, Td, TdLeft, TdRight } from './PDFView'\nimport { Transaction, formatDateOnly, toFormatted,\n    Money, BalanceSheet, balanceSheet, datePresetDates } from '../core'\nimport { CURRENCY_TOTALS_WRAP, DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { currencySelectOptions, datePresetSelectOptions } from './SelectOptions'\nimport { ToolTip } from './Misc'\n\nconst Debit = Transaction.Debit\nconst Credit = Transaction.Credit\n\nexport default function BalanceSheet({summary}: {summary?: boolean}) {\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [currency, setCurrency] = React.useState<string>('')\n    const [info, setInfo] = React.useState<BalanceSheet>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function onCurrencyChange(e: any) {\n        setCurrency(e.target.value)\n    }\n\n    React.useEffect(() => {\n        if (startDate && endDate) {\n            balanceSheet(startDate, endDate, currency).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, currency])\n\n    const report = React.useMemo(() => {\n        return info ? <Document>{summary ? <Page size='A4' style={[Styles.page, {fontSize: 9}]}>\n            <View fixed={true}>\n                <ReportHeader endDate={info.endDate} title='Balance Sheet' />\n            </View>\n\n            <Tr key='assets' style={{marginBottom: 3}}><Th width={50}>ASSETS</Th></Tr>\n            <Subdivision label='Current assets' subdivision={info.assets.current} drcr={Debit}/>\n            <Subtotals totals={info.assets.current.totals} label='Total current assets' width={50} />\n            <Subdivision label='Non-current assets' subdivision={info.assets.nonCurrent} drcr={Debit} />\n            <Subtotals totals={info.assets.nonCurrent.totals} label='Total non-current assets' width={50} />\n            <Totals totals={info.assets.totals} label='TOTAL ASSETS' width={50} />\n\n            <Tr key='liabilities' style={{marginBottom: 3}}><Th width={50}>LIABILITIES</Th></Tr>\n            <Subdivision label='Current liabilities' subdivision={info.liabilities.current} drcr={Credit} />\n            <Subtotals totals={info.liabilities.current.totals} label='Total current liabilities' width={50} />\n            <Subdivision label='Non-current liabilities' subdivision={info.liabilities.nonCurrent} drcr={Credit} />\n            <Subtotals totals={info.liabilities.nonCurrent.totals} label='Total non-current liabilities' width={50} />\n            <Totals totals={info.liabilities.totals} label='TOTAL LIABILITIES' width={50} />\n\n            <Totals totals={info.netAssets} label='NET ASSETS' width={50} />\n\n            <Tr key='label' style={{marginBottom: 3}}><Th width={50}>EQUITY</Th></Tr>\n            <Subdivision label={false} subdivision={info.equity.accounts} drcr={Credit} />\n            <Totals totals={info.equity.accounts.totals} label='TOTAL EQUITY' width={50} />\n            <ExchangeRates rates={info.exchangeRates} />\n        </Page> :\n        <Page size='A4' style={[Styles.page, {fontSize: 9}]}>\n            <View fixed={true}>\n                <ReportHeader startDate={info.startDate} endDate={info.endDate} title='Balance Sheet: Log' />\n                <Tr key='header' style={{marginBottom: 6}}>\n                    <ThLeft width={18} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                    <ThLeft width={11} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                    <ThLeft width={17} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                    <Th width={20} innerStyle={{borderBottomWidth: 1}}>Description</Th>\n                    <ThRight width={17} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n                    <ThRight width={17} innerStyle={{borderBottomWidth: 1}}>Balance</ThRight>\n                </Tr>\n            </View>\n\n            <Tr key='assets' style={{marginBottom: 3}}><Th width={100}>ASSETS</Th></Tr>\n            <SubdivisionLog label='Current assets' subdivision={info.assets.current} drcr={Debit}/>\n            <Subtotals totals={info.assets.current.totals} label='Total current assets' />\n            <SubdivisionLog label='Non-current assets' subdivision={info.assets.nonCurrent} drcr={Debit} />\n            <Subtotals totals={info.assets.nonCurrent.totals} label='Total non-current assets' />\n            <Totals totals={info.assets.totals} label='TOTAL ASSETS' />\n\n            <Tr key='liabilities' style={{marginBottom: 3}}><Th width={100}>LIABILITIES</Th></Tr>\n            <SubdivisionLog label='Current liabilities' subdivision={info.liabilities.current} drcr={Credit} />\n            <Subtotals totals={info.liabilities.current.totals} label='Total current liabilities' />\n            <SubdivisionLog label='Non-current liabilities' subdivision={info.liabilities.nonCurrent} drcr={Credit} />\n            <Subtotals totals={info.liabilities.nonCurrent.totals} label='Total non-current liabilities' />\n            <Totals totals={info.liabilities.totals} label='TOTAL LIABILITIES' />\n\n            <Totals totals={info.netAssets} label='NET ASSETS' />\n\n            <Tr key='label' style={{marginBottom: 3}}><Th width={100}>EQUITY</Th></Tr>\n            <SubdivisionLog label={false} subdivision={info.equity.accounts} drcr={Credit} />\n            <Totals totals={info.equity.accounts.totals} label='TOTAL EQUITY' />\n            <ExchangeRates rates={info.exchangeRates} />\n        </Page>}</Document> : null\n    }, [summary, info && nonce ? nonce : 0])\n\n    return <div>\n        <h1 className='title'>Balance Sheet{summary ? '' : ': Log'}</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n            </tr><tr className='row row-currency'>\n            <th scope='row'>\n                <label htmlFor='currency'>Currency:</label>\n            </th><td>\n                <select name='currency' value={currency} onChange={onCurrencyChange}>\n                    <option key='' value=''>All currencies</option>\n                    {currencySelectOptions()}\n                </select>\n                <ToolTip text='Convert all amounts to the selected currency' />\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename={`balance-sheet${summary ? '' : '-log'}.pdf`}>{report}</PDFView>}\n    </div>\n}\n\nfunction SubdivisionLog({label, subdivision, drcr}: {label: string | false, subdivision: BalanceSheet['assets']['current'], drcr: number}) {\n    return <>\n        {subdivision.groups.length > 0 && label && <Tr key={label} style={{marginBottom: 3}}><Th indent={2} width={98}>{label}</Th></Tr>}\n        {subdivision.groups.map(group => {\n            const hasItems = group.items.length > 0\n\n            return <React.Fragment key={`group-${group.accountId}`}>\n            {hasItems && group.openingBalance.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.openingBalance.length - 1 ? {\n                        marginBottom: 3,\n                    } : {}}>\n                    <TdLeft width={79} indent={4}>\n                        {index == 0 ? <T><B>{group.accountTitle}</B> (opening balance)</T> : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormatted(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n\n            {group.items.map((item, index) => {\n                // If the item's drcr and the division's drcr don't match, then negate amount\n                const amount = drcr == item.drcr ? item.amount : -item.amount\n                return <Tr key={item.id}>\n                    <TdLeft width={14} indent={4}>\n                        {!!item.txnType && Transaction.TypeInfo[item.txnType].shortLabel} {item.txnId}\n                    </TdLeft>\n                    <Td width={11} innerStyle={{marginRight: 6, textAlign: 'right'}}>{!!item.txnDate && formatDateOnly(item.txnDate)}</Td>\n                    <TdLeft width={17} innerStyle={{maxLines: 1}}>{item.actorTitle}</TdLeft>\n                    <Td width={20} innerStyle={{maxLines: 2}}>{\n                        !item.txnDescription ? item.description :\n                        !item.description ? item.txnDescription :\n                        `${item.txnDescription}: ${item.description}`\n                    }</Td>\n                    <TdRight width={17} innerStyle={index == group.items.length - 1 ? {\n                        paddingBottom: 3,\n                    } : {}}>{toFormatted(amount, item.currency)} {item.currency}</TdRight>\n                    <TdRight width={17}>&nbsp;</TdRight>\n                </Tr>\n            })}\n\n            {group.closingBalance.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.closingBalance.length - 1 ? {\n                        marginBottom: 6,\n                    } : {}}>\n                    <TdLeft width={79} indent={4}>\n                        {index == 0 ? <T><B>{group.accountTitle}</B> ({hasItems ? 'closing balance' : 'no activity'})</T> : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormatted(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>})}\n    </>\n}\n\ntype TotalsProps = {\n    label: string\n    totals: Money[]\n    width?: number\n}\n\nfunction Subtotals({label, totals, width = 100}: TotalsProps) {\n    return <View wrap={totals.length > CURRENCY_TOTALS_WRAP} style={{marginBottom: 6}}>\n        {totals.map((money, index) => {\n            return <Tr key={money.currency}>\n                <ThLeft indent={2} width={width - 17} style={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderBottomWidth: 1,\n                    borderColor: '#fff', // transparent\n                } : {}} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderBottomWidth: 1,\n                    borderColor: '#fff', // transparent\n                    position: 'absolute',\n                } : {}}>{index == 0 ? `${label}` : ''}</ThLeft>\n                <TdRight width={15} style={{\n                    borderTopWidth: index == 0 ? 1 : 0,\n                    paddingTop: index == 0 ? 3 : 0,\n                    borderBottomWidth: index == totals.length-1 ? 1 : 0,\n                    paddingBottom: index == totals.length-1 ? 3 : 0,\n                }}>\n                    {toFormatted(money.amount, money.currency)} {money.currency}\n                </TdRight>\n            </Tr>\n        })}\n    </View>\n}\n\nfunction Totals({label, totals, width = 100}: TotalsProps) {\n    return <View wrap={totals.length > CURRENCY_TOTALS_WRAP} style={{marginBottom: 12}}>\n        {totals.map((money, index) => {\n            return <Tr key={money.currency}>\n                <ThLeft width={width - 15} style={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 2,\n                    borderColor: '#fff', // transparent\n                } : {}} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 2,\n                    borderColor: '#fff', // transparent\n                    position: 'absolute',\n                } : {}}>{index == 0 ? `${label}` : ''}</ThLeft>\n                <TdRight width={15} style={{\n                    borderTopWidth: index == 0 ? 2 : 0,\n                    paddingTop: index == 0 ? 3 : 0,\n                    borderBottomWidth: index == totals.length-1 ? 2 : 0,\n                    paddingBottom: index == totals.length-1 ? 3 : 0,\n                }}>\n                    {toFormatted(money.amount, money.currency)} {money.currency}\n                </TdRight>\n            </Tr>\n        })}\n    </View>\n}\n\nfunction Subdivision({label, subdivision, drcr}: {label: string | false, subdivision: BalanceSheet['assets']['current'], drcr: number}) {\n    return <>\n        {subdivision.groups.length > 0 && label && <Tr key={label} style={{marginBottom: 3}}><Th indent={2} width={48}>{label}</Th></Tr>}\n        {subdivision.groups.map(group => {\n            return <React.Fragment key={`group-${group.accountId}`}>\n            {group.closingBalance.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.closingBalance.length - 1 ? {\n                        marginBottom: 6,\n                    } : {}}>\n                    <TdLeft width={29} indent={4}>\n                        {index == 0 ? <B>{group.accountTitle}</B> : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormatted(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>})}\n    </>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, Tr, Th, ThLeft, ThRight, Td, TdLeft, TdRight } from './PDFView'\nimport { Transaction, formatDateOnly, toFormattedAbs,\n    Money, ProfitAndLoss, profitAndLoss, datePresetDates } from '../core'\nimport { CURRENCY_TOTALS_WRAP, DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { currencySelectOptions, datePresetSelectOptions } from './SelectOptions'\nimport { ToolTip } from './Misc'\n\nexport default function ProfitAndLoss({summary}: {summary?: boolean}) {\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [currency, setCurrency] = React.useState<string>('')\n    const [info, setInfo] = React.useState<ProfitAndLoss>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function onCurrencyChange(e: any) {\n        setCurrency(e.target.value)\n    }\n\n    React.useEffect(() => {\n        if (startDate && endDate) {\n            profitAndLoss(startDate, endDate, currency).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, currency])\n\n    const report = React.useMemo(() => {\n        return info ? <Document>{summary ? <Page size=\"A4\" style={[Styles.page, {fontSize: 9}]}>\n            <View fixed={true}>\n                <ReportHeader startDate={info.startDate} endDate={info.endDate} title='Profit and Loss: Summary' />\n            </View>\n\n            {info.hasOperations ? <DivisionSummary\n                label='Ordinary revenue / expense'\n                netLabel='Earnings before interest, tax, depreciation and amortisation (EBITDA)'\n                division={info.operations}\n            /> : <>\n                <Tr key='label' style={{marginBottom: 3}}><Th width={60}>Ordinary revenue / expense</Th></Tr>\n                <Tr key='none'><Td indent={2} width={58}>No items</Td></Tr>\n            </>}\n\n            {info.hasDepreciation && <DivisionSummary\n                label='Depreciation and amortisation'\n                netLabel='Net depreciation and amortisation'\n                division={info.depreciation}\n            />}\n            <Totals key='ebit' totals={info.ebit} width={60} label='Earnings before interest and tax (EBIT)' />\n\n            {info.hasInterestTax && <DivisionSummary\n                label='Interest and tax'\n                netLabel='Net interest and tax'\n                division={info.interestTax}\n            />}\n            <Totals key='netProfit' totals={info.netProfit} width={60} label='Net profit' />\n            <ExchangeRates rates={info.exchangeRates} />\n        </Page> :\n        <Page size=\"A4\" style={[Styles.page, {fontSize: 9}]}>\n            <View fixed={true}>\n                <ReportHeader startDate={info.startDate} endDate={info.endDate} title='Profit and Loss: Detail' />\n                <Tr key='header' style={{marginBottom: 6}}>\n                    <ThLeft width={18} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                    <ThLeft width={11} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                    <ThLeft width={20} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                    <Th width={34} innerStyle={{borderBottomWidth: 1}}>Description</Th>\n                    <ThRight width={17} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n                </Tr>\n            </View>\n\n            {info.hasOperations ? <DivisionDetail\n                label='Ordinary revenue / expense'\n                netLabel='Earnings before interest, tax, depreciation and amortisation (EBITDA)'\n                division={info.operations}\n            /> : <>\n                <Tr key='label' style={{marginBottom: 3}}><Th width={100}>Ordinary revenue / expense</Th></Tr>\n                <Tr key='none'><Td indent={2} width={98}>No items</Td></Tr>\n            </>}\n\n            {info.hasDepreciation && <DivisionDetail\n                label='Depreciation and amortisation'\n                netLabel='Net depreciation and amortisation'\n                division={info.depreciation}\n            />}\n            <Totals key='ebit' totals={info.ebit} label='Earnings before interest and tax (EBIT)' />\n\n            {info.hasInterestTax && <DivisionDetail\n                label='Interest and tax'\n                netLabel='Net interest and tax'\n                division={info.interestTax}\n            />}\n            <Totals key='netProfit' totals={info.netProfit} label='Net profit' />\n            <ExchangeRates rates={info.exchangeRates} />\n        </Page>}</Document> : null\n    }, [summary, info && nonce ? nonce : 0])\n\n    return <div>\n        <h1 className='title'>Profit and Loss: {summary ? 'Summary' : 'Detail'}</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n            </tr><tr className='row row-currency'>\n            <th scope='row'>\n                <label htmlFor='currency'>Currency:</label>\n            </th><td>\n                <select name='currency' value={currency} onChange={onCurrencyChange}>\n                    <option key='' value=''>All currencies</option>\n                    {currencySelectOptions()}\n                </select>\n                <ToolTip text='Convert all amounts to the selected currency' />\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename={`profit-and-loss-${summary ? 'summary' : 'detail'}.pdf`}>{report}</PDFView>}\n    </div>\n}\n\ntype DivisionProps = {\n    label: string\n    netLabel: string\n    division: ProfitAndLoss['operations']\n}\n\nfunction DivisionDetail({label, netLabel, division}: DivisionProps) {\n    return <>\n        <Tr key='label' style={{marginBottom: 3}}><Th width={100}>{label}</Th></Tr>\n\n        {division.revenues.groups.length > 0 && <Tr key='revenue' style={{marginBottom: 3}}><Th indent={2} width={98}>Revenue</Th></Tr>}\n        {division.revenues.groups.map(group => <React.Fragment key={`group-${group.accountId}`}>\n            <Tr key='group-title' style={{marginBottom: 3}}><Th indent={4} width={96}>{group.accountTitle}</Th></Tr>\n            {group.items.map((item, index) => {\n                return <Tr key={item.id}>\n                    <TdLeft width={14} indent={4}>{Transaction.TypeInfo[item.txnType].shortLabel} {item.txnId}</TdLeft>\n                    <Td width={11} innerStyle={{marginRight: 6, textAlign: 'right'}}>{formatDateOnly(item.txnDate)}</Td>\n                    <TdLeft width={20} innerStyle={{maxLines: 1}}>{item.actorTitle}</TdLeft>\n                    <Td width={34} innerStyle={{maxLines: 2}}>{\n                        !item.txnDescription ? item.description :\n                        !item.description ? item.txnDescription :\n                        `${item.txnDescription}: ${item.description}`\n                    }</Td>\n                    <TdRight width={17} innerStyle={index == group.items.length - 1 ? {\n                        marginBottom: 3,\n                        paddingBottom: 3,\n                        borderBottomWidth: 1,\n                    } : {}}>{toFormattedAbs(item.amount, item.currency)} {item.currency}</TdRight>\n                </Tr>\n            })}\n\n            {group.totals.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.totals.length - 1 ? {\n                        marginBottom: 12,\n                    } : {}}>\n                    <TdLeft width={79} indent={4}>\n                        {index == 0 ? `Total ${group.accountTitle}` : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>)}\n\n        <View wrap={division.revenues.totals.length > CURRENCY_TOTALS_WRAP}>\n        {division.revenues.totals.map((money, index) => {\n            return <Tr key={money.currency} style={index == division.revenues.totals.length-1 ? {\n                marginBottom: 12,\n            } : {}}>\n                <ThLeft width={81} indent={2} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderColor: '#fff', // transparent\n                } : {}}>{index == 0 ? 'Total Revenue' : ''}</ThLeft>\n                <ThRight width={17} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                } : {}}>\n                    {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                </ThRight>\n            </Tr>\n        })}\n        </View>\n\n        {division.expenses.groups.length > 0 && <Tr key='expenses' style={{marginBottom: 3}}><Th indent={2} width={98}>Expenses</Th></Tr>}\n        {division.expenses.groups.map(group => <React.Fragment key={`group-${group.accountId}`}>\n            <Tr key='group-title' style={{marginBottom: 3}}><Th indent={4} width={96}>{group.accountTitle}</Th></Tr>\n            {group.items.map((item, index) => {\n                return <Tr key={item.id}>\n                    <TdLeft width={14} indent={4}>{Transaction.TypeInfo[item.txnType].shortLabel} {item.txnId}</TdLeft>\n                    <Td width={11} innerStyle={{marginRight: 6, textAlign: 'right'}}>{formatDateOnly(item.txnDate)}</Td>\n                    <TdLeft width={20} innerStyle={{maxLines: 1}}>{item.actorTitle}</TdLeft>\n                    <Td width={34} innerStyle={{maxLines: 2}}>{\n                        !item.txnDescription ? item.description :\n                        !item.description ? item.txnDescription :\n                        `${item.txnDescription}: ${item.description}`\n                    }</Td>\n                    <TdRight width={17} innerStyle={index == group.items.length - 1 ? {\n                        marginBottom: 3,\n                        paddingBottom: 3,\n                        borderBottomWidth: 1,\n                    } : {}}>{toFormattedAbs(item.amount, item.currency)} {item.currency}</TdRight>\n                </Tr>\n            })}\n\n            {group.totals.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.totals.length - 1 ? {\n                        marginBottom: 12,\n                    } : {}}>\n                    <TdLeft width={79} indent={4}>\n                        {index == 0 ? `Total ${group.accountTitle}` : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>)}\n\n        <View wrap={division.expenses.totals.length > CURRENCY_TOTALS_WRAP}>\n        {division.expenses.totals.map((money, index) => {\n            return <Tr key={money.currency} style={index == division.expenses.totals.length-1 ? {\n                marginBottom: 12,\n            } : {}}>\n                <ThLeft width={81} indent={2} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderColor: '#fff', // transparent\n                } : {}}>{index == 0 ? 'Total Expenses' : ''}</ThLeft>\n                <ThRight width={17} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                } : {}}>\n                    {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                </ThRight>\n            </Tr>\n        })}\n        </View>\n\n        <Totals totals={division.netTotals} label={netLabel} />\n    </>\n}\n\ntype TotalsProps = {\n    label: string\n    totals: Money[]\n    width?: number\n}\n\nfunction Totals({label, totals, width = 100}: TotalsProps) {\n    // Keep totals together unless there are a lot of currencies\n    return <View wrap={totals.length > CURRENCY_TOTALS_WRAP} style={{marginBottom: 12}}>\n        {totals.map((money, index) => {\n            return <Tr key={money.currency}>\n                <ThLeft width={width - 15} style={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 2,\n                    borderColor: '#fff', // transparent\n                } : {}} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 2,\n                    borderColor: '#fff', // transparent\n                    position: 'absolute',\n                } : {}}>{index == 0 ? `${label}` : ''}</ThLeft>\n                <ThRight width={15} style={{\n                    borderTopWidth: index == 0 ? 2 : 0,\n                    paddingTop: index == 0 ? 3 : 0,\n                    borderBottomWidth: index == totals.length-1 ? 2 : 0,\n                    paddingBottom: index == totals.length-1 ? 3 : 0,\n                }}>\n                    {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                </ThRight>\n            </Tr>\n        })}\n    </View>\n}\n\nfunction DivisionSummary({label, netLabel, division}: DivisionProps) {\n    return <>\n        <Tr key='label' style={{marginBottom: 3}}><Th width={60}>{label}</Th></Tr>\n\n        {division.revenues.groups.length > 0 && <Tr key='revenue' style={{marginBottom: 3}}><Th indent={2} width={58}>Revenue</Th></Tr>}\n        {division.revenues.groups.map(group => <React.Fragment key={`group-${group.accountId}`}>\n            {group.totals.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.totals.length - 1 ? {\n                        marginBottom: 3,\n                    } : {}}>\n                    <TdLeft width={39} indent={4}>\n                        {index == 0 ? group.accountTitle : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>)}\n\n        <View wrap={division.revenues.totals.length > CURRENCY_TOTALS_WRAP}>\n        {division.revenues.totals.map((money, index) => {\n            return <Tr key={money.currency} style={index == division.revenues.totals.length-1 ? {\n                marginBottom: 12,\n            } : {}}>\n                <ThLeft width={41} indent={2} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderColor: '#fff', // transparent\n                } : {}}>{index == 0 ? 'Total Revenue' : ''}</ThLeft>\n                <ThRight width={17} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                } : {}}>\n                    {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                </ThRight>\n            </Tr>\n        })}\n        </View>\n\n        {division.expenses.groups.length > 0 && <Tr key='expenses' style={{marginBottom: 3}}><Th indent={2} width={58}>Expenses</Th></Tr>}\n        {division.expenses.groups.map(group => <React.Fragment key={`group-${group.accountId}`}>\n            {group.totals.map((money, index) => {\n                return <Tr key={money.currency} style={index == group.totals.length - 1 ? {\n                        marginBottom: 3,\n                    } : {}}>\n                    <TdLeft width={39} indent={4}>\n                        {index == 0 ? group.accountTitle : ''}\n                    </TdLeft>\n                    <TdRight width={17}>\n                        {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                    </TdRight>\n                </Tr>\n            })}\n        </React.Fragment>)}\n\n        <View wrap={division.expenses.totals.length > CURRENCY_TOTALS_WRAP}>\n        {division.expenses.totals.map((money, index) => {\n            return <Tr key={money.currency} style={index == division.expenses.totals.length-1 ? {\n                marginBottom: 12,\n            } : {}}>\n                <ThLeft width={41} indent={2} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                    borderColor: '#fff', // transparent\n                } : {}}>{index == 0 ? 'Total Expenses' : ''}</ThLeft>\n                <ThRight width={17} innerStyle={index == 0 ? {\n                    paddingTop: 3,\n                    borderTopWidth: 1,\n                } : {}}>\n                    {toFormattedAbs(money.amount, money.currency)} {money.currency}\n                </ThRight>\n            </Tr>\n        })}\n        </View>\n\n        <Totals totals={division.netTotals} label={netLabel} width={60}/>\n    </>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Document, Page, View, PDFView, Styles, T, B, Tr, ThLeft, ThRight, Td, TdLeft, TdRight } from './PDFView'\nimport { CREDITS, Project, Element, Transaction, TransactionType, Actor,\n    toFormatted, TaxCodeInfo, formatDateOnly, addSubtractMoney } from '../core'\nimport { orderByField } from '../util/util'\n\ntype TaxItem = {\n    id: number\n    label: string\n    rate: string\n    amount: number\n    currency: string\n}\n\ntype ReportInfo = {\n    type: TransactionType\n    id: number\n\n    customerTitle: string\n    customerAddress: string\n    customerTaxIdLabel: string\n    customerTaxId: string\n\n    ownTitle: string\n    ownAddress: string\n    ownTaxIds: {\n        label: string\n        taxId: string\n    }[]\n\n    date: string\n    due?: string\n    currency: string\n    elements: {\n        id: number\n        description: string\n        amount: number\n        currency: string\n        taxes: TaxItem[]\n    }[]\n\n    subTotal: number\n\n    taxes: {\n        // info: TaxCodeInfo,\n        label: string\n        items: TaxItem[]\n        total: number\n    }[]\n\n    total: number\n\n    payments: {\n        id: number\n        amount: number\n        currency: string\n    }[]\n    paidAmount: number\n    dueAmount: number\n\n    euReverseChargeSale?: boolean\n    euCommunityGoods?: boolean\n}\n\nasync function reportInfo(id: number) : Promise<ReportInfo> {\n    const transaction = await Transaction.query().findById(id)\n        .whereIn('type', [Transaction.Sale, Transaction.Invoice])\n        .withGraphJoined('actor')\n        .withGraphFetched('elements') as Transaction & { actor: Actor, settledBy?: Element[] }\n\n    if (!transaction) {\n        return Promise.reject('Not found')\n    }\n\n    if (transaction.type == Transaction.Invoice) {\n        await transaction.$fetchGraph('settledBy')\n    }\n\n    const brackets: Record<string, TaxItem[]> = {}\n    const taxIds: Record<string, {label: string, taxId: string}> = {}\n    const result: ReportInfo = {\n        type: transaction.type!,\n        id: transaction.id!,\n        customerTitle: transaction.actor.title!,\n        customerAddress: transaction.actor.address!,\n        customerTaxIdLabel: transaction.actor.taxIdLabel!,\n        customerTaxId: transaction.actor.taxId!,\n        ownTitle: Project.variables.get('title'),\n        ownAddress: Project.variables.get('address'),\n        ownTaxIds: [],\n        date: transaction.date!,\n        due: transaction.due,\n        currency: Project.variables.get('currency'),\n        elements: [],\n        subTotal: 0,\n        taxes: [],\n        total: 0,\n        payments: [],\n        paidAmount: 0,\n        dueAmount: 0,\n    }\n\n    if (transaction.elements && transaction.elements.length > 0) {\n        result.currency = transaction.elements[0].currency!\n\n        const children = []\n        for (let e of transaction.elements) {\n            // Only populate credit elements\n            if (e.drcr == Transaction.Credit) {\n                if (e.currency != result.currency) {\n                    return Promise.reject(`Must be single currency: ${e.currency}, ${result.currency}`)\n                }\n\n                if (e.parentId == 0) {\n                    result.elements.push({\n                        id: e.id!,\n                        amount: e.amount!,\n                        currency: e.currency!,\n                        description: e.description!,\n                        taxes: [],\n                    })\n                }\n                else {\n                    children.push(e)\n                }\n            }\n        }\n\n        // Now populate child elements. Any orphans are promoted.\n        for (let e of children) {\n            let parent: typeof result.elements[0] | false = false\n            for (let p of result.elements) {\n                if (e.parentId == p.id) {\n                    parent = p\n                    break\n                }\n            }\n\n            if (parent) {\n                const info = new TaxCodeInfo(e.taxCode!)\n                const item = {\n                    id: e.id!,\n                    label: info.typeAndRateLabel,\n                    rate: info.rate,\n                    amount: e.amount!,\n                    currency: e.currency!,\n                }\n\n                let showLine = (info.rate && info.rate != '0') || item.amount != 0\n                let showTaxId = showLine\n\n                // Some special processing for EU VAT\n                if (info.isEU) {\n                    if (info.variant == 'reverse') {\n                        result.euReverseChargeSale = true\n                        showTaxId = true\n                    }\n\n                    if (info.tag == 'eu-goods') {\n                        result.euCommunityGoods = true\n                    }\n                }\n\n                if (showLine) {\n                    const baseCode = info.baseCode\n                    if (!brackets[baseCode]) {\n                        brackets[baseCode] = []\n                    }\n                    brackets[baseCode].push(item)\n                    parent.taxes.push(item)\n                }\n\n                if (showTaxId && !taxIds[info.authority]) {\n                    taxIds[info.authority] = {\n                        label: info.taxAuthority.taxIdLabel,\n                        taxId: Project.variables.get(info.taxAuthority.taxIdVariableName),\n                    }\n                }\n            }\n            else {\n                // Promote to parent\n                result.elements.push({\n                    id: e.id!,\n                    amount: e.amount!,\n                    currency: e.currency!,\n                    description: e.description!,\n                    taxes: [],\n                })\n            }\n        }\n    }\n\n    result.subTotal = result.elements.length > 0 ? addSubtractMoney(result.elements)[0].amount : 0\n\n    // Process taxIds\n    Object.keys(taxIds).forEach(k => {\n        if (taxIds[k].taxId) {\n            result.ownTaxIds.push(taxIds[k])\n        }\n    })\n    result.ownTaxIds.sort(orderByField('label'))\n\n    // Process taxes\n    Object.keys(brackets).forEach(baseCode => {\n        result.taxes.push({\n            label: new TaxCodeInfo(baseCode).typeAndRateLabel,\n            items: brackets[baseCode],\n            total: addSubtractMoney(brackets[baseCode])[0].amount,\n        })\n    })\n    result.taxes.sort(orderByField('label'))\n\n    result.total = addSubtractMoney([\n        {amount: result.subTotal, currency: result.currency},\n        ...result.taxes.map(b => ({amount: b.total, currency: result.currency}))\n    ])[0].amount\n\n    if (transaction.settledBy && transaction.settledBy.length > 0) {\n        for (let e of transaction.settledBy) {\n            if (e.currency != result.currency) {\n                return Promise.reject(`Must be single currency: ${e.currency}, ${result.currency}`)\n            }\n\n            result.payments.push({\n                id: e.id!,\n                amount: e.amount!,\n                currency: e.currency!,\n            })\n        }\n    }\n\n    result.paidAmount = transaction.type == Transaction.Sale ? result.total :\n        // Transaction.Invoice\n        result.payments.length > 0 ? addSubtractMoney(result.payments)[0].amount : 0\n\n    result.dueAmount = addSubtractMoney(\n        [{amount: result.total, currency: result.currency}],\n        [{amount: result.paidAmount, currency: result.currency}],\n    )[0].amount\n\n    return result\n}\n\ntype Props = {\n    arg1?: string\n}\n\nexport default function SalePDF(props: Props) {\n    const argId = /^\\d+$/.test(props.arg1!) ? Number(props.arg1) : 0\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    React.useEffect(() => {\n        let mounted = true\n\n        if (argId > 0) {\n            reportInfo(argId).then(info => {\n                if (mounted) {\n                    setInfo(info)\n                    setError('')\n                    setNonce(Date.now())\n                }\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n\n        return () => {mounted=false}\n    }, [props.arg1])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info) : null\n    }, [info && nonce ? nonce : 0])\n\n    if (info || error) {\n        return <div>\n            <div className='title-pane'>\n                <span className='breadcrumb'><Link to='/sales'>\n                    Sales\n                </Link> » <Link to={`/sales/${argId}`}>\n                    {info ? Transaction.TypeInfo[info.type].label : 'Sale'} {argId}\n                </Link> » </span>\n                <h1 className='title inline'>PDF</h1>\n            </div>\n\n            {error && <div className='error'>{error}</div>}\n            {info && report && <PDFView _key={nonce} filename={`invoice-${info.id}.pdf`}>{report}</PDFView>}\n        </div>\n    }\n\n    return null\n}\n\nfunction renderReport(info: ReportInfo) {\n    const rowStyle={\n        paddingTop: 3,\n        paddingBottom: 3,\n        borderStyle: 'solid',\n        borderColor: '#e0e0e0',\n    }\n\n    const notes: string[] = []\n    if (info.euReverseChargeSale) {\n        notes.push('EU VAT reverse charged')\n    }\n    if (info.euCommunityGoods) {\n        notes.push('Intra-Community supply of goods')\n    }\n\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: 10}]}>\n        <View style={{fontSize: 24, marginBottom: 12}}>\n            <B>TAX INVOICE</B>\n        </View>\n\n        <View style={{flexDirection: 'row'}}>\n            <View style={{width: '50%'}}><Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>To:</ThLeft>\n                <TdLeft width={70}>{info.customerTitle}</TdLeft>\n            </Tr>{!!info.customerAddress && <Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}></ThLeft>\n                <Td width={70}>{info.customerAddress}</Td>\n            </Tr>}{!!info.customerTaxId && <Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>{info.customerTaxIdLabel}:</ThLeft>\n                <Td width={70}>{info.customerTaxId}</Td>\n            </Tr>}<Tr style={{marginBottom: 3}}>\n                <Td width={100}>&nbsp;</Td>\n            </Tr><Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>Invoice No.:</ThLeft>\n                <Td width={70}>{info.id}</Td>\n            </Tr><Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>Issue Date:</ThLeft>\n                <Td width={70}>{formatDateOnly(info.date)}</Td>\n            </Tr>{!!info.due && <Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>Due Date:</ThLeft>\n                <Td width={70}>{formatDateOnly(info.due)}</Td>\n            </Tr>}</View>\n\n            <View style={{width: '35%', marginLeft: '15%'}}><Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}>From:</ThLeft>\n                <TdLeft width={70}>{info.ownTitle}</TdLeft>\n            </Tr>{!!info.ownAddress && <Tr style={{marginBottom: 3}}>\n                <ThLeft width={30}></ThLeft>\n                <Td width={70}>{info.ownAddress}</Td>\n            </Tr>}{info.ownTaxIds.map((a, index) => <Tr key={index} style={{marginBottom: 3}}>\n                <ThLeft width={30}>{a.label}:</ThLeft>\n                <TdLeft width={70}>{a.taxId}</TdLeft>\n            </Tr>)}</View>\n        </View>\n\n        <Tr style={[rowStyle, {marginTop: 24, borderBottomWidth: 1}]}>\n            <ThLeft width={65}>Description</ThLeft>\n            <ThRight width={15}>Tax</ThRight>\n            <ThRight width={20}>Amount ({info.currency})</ThRight>\n        </Tr>\n        {info.elements.map(e => <React.Fragment key={e.id}>\n            <Tr key={e.id} style={[rowStyle, {borderBottomWidth: 1}]}>\n                <TdLeft width={65}>{e.description}</TdLeft>\n                <TdRight width={15}>&nbsp;</TdRight>\n                <TdRight width={20}>{toFormatted(e.amount, info.currency)}</TdRight>\n            </Tr>\n            {e.taxes.map(t => <Tr key={t.id} style={[rowStyle, {borderBottomWidth: 1}]}>\n                <TdLeft width={60} indent={5}>{t.label}</TdLeft>\n                <TdRight width={15}>{toFormatted(t.amount, info.currency)}</TdRight>\n                <TdRight width={20}>&nbsp;</TdRight>\n            </Tr>)}\n        </React.Fragment>)}\n\n        <Tr style={{marginTop: 24, marginBottom: 3}}>\n            <ThRight width={80}>Subtotal</ThRight>\n            <TdRight width={20}>{toFormatted(info.subTotal, info.currency)}</TdRight>\n        </Tr>\n\n        {info.taxes.map(b => <React.Fragment key={b.label}>\n            <Tr style={{marginBottom: 3}}>\n                <TdRight width={80}>{b.label}</TdRight>\n                <TdRight width={20}>{toFormatted(b.total, info.currency)}</TdRight>\n            </Tr>\n        </React.Fragment>)}\n\n        <Tr style={{marginTop: 12, marginBottom: 3 + 12}}>\n            <ThRight width={80}>Total</ThRight>\n            <TdRight width={20}>{toFormatted(info.total, info.currency)}</TdRight>\n        </Tr>\n\n        {info.type == Transaction.Invoice && info.paidAmount > 0 && <Tr style={{marginBottom: 3}}>\n            <TdRight width={80}>Previous payments</TdRight>\n            <TdRight width={20}>{toFormatted(info.paidAmount, info.currency)}</TdRight>\n        </Tr>}\n\n        {info.type == Transaction.Invoice && <Tr style={{marginBottom: 3}}>\n            <ThRight width={80}>Amount Due</ThRight>\n            <TdRight width={20}>{toFormatted(info.dueAmount, info.currency)}</TdRight>\n        </Tr>}\n\n        {info.dueAmount == 0 && <Tr style={{marginBottom: 3}}>\n            <ThRight width={100}>PAID</ThRight>\n        </Tr>}\n\n        {notes.length > 0 && <View style={{marginTop: 24, marginBottom: 3}}>\n            <B>NOTES</B>\n        </View>}\n        {notes.map((line, index) => <View key={index} style={{marginBottom: 3}}>\n            <T>{line}</T>\n        </View>)}\n\n        {!!CREDITS && <View style={{\n            position: 'absolute',\n            bottom: 56, left: 56, right: 56,\n            borderStyle: 'solid', borderColor: '#333', borderTopWidth: 1,\n            paddingTop: 1,\n        }}>\n            <T style={{fontSize: 8}}>{CREDITS}</T>\n        </View>}\n    </Page></Document>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, T, Tr, Th, ThLeft, ThRight, TdLeft, TdRight } from './PDFView'\nimport { Project, Transaction, toFormatted,\n    datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    accrual: boolean\n    sales: TaxItemGroup\n    exportSales: TaxItemGroup\n    otherFreeSales: TaxItemGroup\n    inputTaxedSales: TaxItemGroup\n    capitalPurchases: TaxItemGroup\n    purchases: TaxItemGroup\n    inputTaxedPurchases: TaxItemGroup\n    freePurchases: TaxItemGroup\n    g: Record<number, number>\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, accrual: boolean, g7: number, g15: number, g18: number) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, accrual, ['AU:'])\n    const result: ReportInfo = { startDate, endDate, accrual,\n        sales: {items: [], taxTotals: [], totals: []},\n        exportSales: {items: [], taxTotals: [], totals: []},\n        otherFreeSales: {items: [], taxTotals: [], totals: []},\n        inputTaxedSales: {items: [], taxTotals: [], totals: []},\n        capitalPurchases: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        inputTaxedPurchases: {items: [], taxTotals: [], totals: []},\n        freePurchases: {items: [], taxTotals: [], totals: []},\n        g: {},\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'AUD')\n        if (item.drcr == Transaction.Credit) {\n            result.sales.items.push(item)\n\n            if (item.taxInfo.variant == 'export') {\n                result.exportSales.items.push(item)\n            }\n            else if (item.taxInfo.variant == 'input') {\n                result.inputTaxedSales.items.push(item)\n            }\n            else if (item.taxInfo.rate == '0') {\n                result.otherFreeSales.items.push(item)\n            }\n        }\n        else {\n            if (item.taxInfo.variant == 'capital') {\n                result.capitalPurchases.items.push(item)\n            }\n            else {\n                result.purchases.items.push(item)\n            }\n\n            if (item.taxInfo.variant == 'input') {\n                result.inputTaxedPurchases.items.push(item)\n            }\n            else if (item.taxInfo.rate == '0') {\n                result.freePurchases.items.push(item)\n            }\n        }\n    })\n\n    ;['sales', 'exportSales', 'inputTaxedSales', 'otherFreeSales',\n    'capitalPurchases', 'purchases', 'inputTaxedPurchases', 'freePurchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.grossAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'AUD'}]\n            group.totals = [{amount: 0, currency: 'AUD'}]\n        }\n    })\n\n    // taxTotals and totals are single currency so just use [0]\n    result.g[1] = result.sales.totals[0].amount\n    result.g[2] = result.exportSales.totals[0].amount\n    result.g[3] = result.otherFreeSales.totals[0].amount\n    result.g[4] = result.inputTaxedSales.totals[0].amount\n    result.g[5] = result.g[2] + result.g[3] + result.g[4]\n    result.g[6] = result.g[1] - result.g[5]\n    result.g[7] = g7\n    result.g[8] = result.g[6] + result.g[7]\n    result.g[9] = result.g[8] / 11\n\n    result.g[10] = result.capitalPurchases.totals[0].amount\n    result.g[11] = result.purchases.totals[0].amount\n    result.g[12] = result.g[10] + result.g[11]\n    result.g[13] = result.inputTaxedPurchases.totals[0].amount\n    result.g[14] = result.freePurchases.totals[0].amount\n    result.g[15] = g15\n    result.g[16] = result.g[13] + result.g[14] + result.g[15]\n    result.g[17] = result.g[12] - result.g[16]\n    result.g[18] = g18\n    result.g[19] = result.g[17] + result.g[18]\n    result.g[20] = result.g[19] / 11\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [g7, setG7] = React.useState<string>('')\n    const [g15, setG15] = React.useState<string>('')\n    const [g18, setG18] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n    const accrual: boolean = Project.variables.get('au:accrual')\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'AUD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {g7, g15, g18}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Record<string, number> = amounts as any // typecast\n            reportInfo(startDate, endDate, accrual, parsed.g7, parsed.g15, parsed.g18).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, accrual, ...debounce([g7, g15, g18])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>GST calculation for BAS</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-g7'>\n            <th scope='row'>\n                <label htmlFor='g7'>G7 Adjustments (if applicable):</label>\n            </th><td>\n                <input name='g7' onChange={e => {setG7(e.target.value)}}></input> AUD\n                {formErrors['g7'] && <div className='error'>{formErrors['g7']}</div>}\n            </td>\n        </tr><tr className='row row-g15'>\n            <th scope='row'>\n                <label htmlFor='g15'>G15 Estimated purchases for private use<br />or not income tax deductible:</label>\n            </th><td>\n                <input name='g15' onChange={e => {setG15(e.target.value)}}></input> AUD\n                {formErrors['g15'] && <div className='error'>{formErrors['g15']}</div>}\n            </td>\n        </tr><tr className='row row-g18'>\n            <th scope='row'>\n                <label htmlFor='g18'>G18 Adjustments (if applicable):</label>\n            </th><td>\n                <input name='g18' onChange={e => {setG18(e.target.value)}}></input> AUD\n                {formErrors['g18'] && <div className='error'>{formErrors['g18']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='gst-calculation-for-bas.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`GST calculation for BAS${summary ? '' : ': Detail'}`}>\n                <T style={{fontSize: 10}}>({info.accrual ? 'accruals' : 'cash'} basis)</T>\n            </ReportHeader>\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount + Tax</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <SummaryG label='G1    Total sales (including any GST)' amount={info.g[1]} comment='G1 on the BAS' />\n            <SummaryG label='G2    Export sales' amount={info.g[2]} comment='G2 on the BAS' />\n            <SummaryG label='G3    Other GST-free sales' amount={info.g[3]} comment='G3 on the BAS' />\n            <SummaryG label='G4    Input taxed sales' amount={info.g[3]} />\n            <SummaryG label='G5    G2+G3+G4' amount={info.g[5]} />\n            <SummaryG label='G6    Total sales subject to GST (G1 minus G5)' amount={info.g[6]} />\n            <SummaryG label='G7    Adjustments (if applicable)' amount={info.g[7]} />\n            <SummaryG label='G8    Total sales subject to GST after adjustments (G6+G7)' amount={info.g[8]} />\n            <SummaryG label='G9    GST on sales (G8 divided by eleven)' amount={info.g[9]} comment='1A in the Summary section of the BAS' marginBottom={24} />\n\n            <SummaryG label='G10   Capital purchases (including any GST)' amount={info.g[10]} comment='G10 on the BAS' />\n            <SummaryG label='G11   Non-capital purchases (including any GST)' amount={info.g[11]} comment='G11 on the BAS' />\n            <SummaryG label='G12   G10+G11' amount={info.g[12]} />\n            <SummaryG label='G13   Purchases for making input taxed sales' amount={info.g[13]} />\n            <SummaryG label='G14   Purchases without GST in the price' amount={info.g[14]} />\n            <SummaryG label='G15   Estimated purchases for private use or not income tax deductible' amount={info.g[15]} />\n            <SummaryG label='G16   G13+G14+G15' amount={info.g[16]} />\n            <SummaryG label='G17   Total purchases subject to GST (G12 minus G16)' amount={info.g[17]} />\n            <SummaryG label='G18   Adjustments (if applicable)' amount={info.g[18]} />\n            <SummaryG label='G19   Total purchases subject to GST after adjustments (G7+G18)' amount={info.g[19]} />\n            <SummaryG label='G20   GST on purchases (G19 divided by eleven)' amount={info.g[20]} comment='1B in the Summary section of the BAS' />\n        </> : <>\n            {info.sales.items.length > 0 ? <>\n                <Tr><Th width={100}>G1    Total sales (including any GST)</Th></Tr>\n                <GroupItems group={info.sales} gross={true} />\n                <GroupTotal group={info.sales} marginBottom={0} />\n            </> :\n                <G label='G1    Total sales (including any GST)' amount={info.g[1]} marginBottom={0} />\n            }\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(G1 on the BAS)</TdRight></Tr>\n\n            {info.exportSales.items.length > 0 ? <>\n                <Tr><Th width={100}>G2    Export sales</Th></Tr>\n                <GroupItems group={info.exportSales} gross={true} />\n                <GroupTotal group={info.exportSales} marginBottom={0} />\n            </> :\n                <G label='G2    Export sales' amount={info.g[2]} marginBottom={0} />\n            }\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(G2 on the BAS)</TdRight></Tr>\n\n            {info.otherFreeSales.items.length > 0 ? <>\n                <Tr><Th width={100}>G3    Other GST-free sales</Th></Tr>\n                <GroupItems group={info.otherFreeSales} gross={true} />\n                <GroupTotal group={info.otherFreeSales} marginBottom={0} />\n            </> :\n                <G label='G3    Other GST-free sales' amount={info.g[3]} marginBottom={0} />\n            }\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(G3 on the BAS)</TdRight></Tr>\n\n            {info.inputTaxedSales.items.length > 0 ? <>\n                <Tr><Th width={100}>G4    Input taxed sales</Th></Tr>\n                <GroupItems group={info.inputTaxedSales} gross={true} />\n                <GroupTotal group={info.inputTaxedSales} />\n            </> :\n                <G label='G4    Input taxed sales' amount={info.g[3]} />\n            }\n\n            <G label='G5    G2+G3+G4' amount={info.g[5]} />\n            <G label='G6    Total sales subject to GST (G1 minus G5)' amount={info.g[6]} />\n            <G label='G7    Adjustments (if applicable)' amount={info.g[7]} />\n            <G label='G8    Total sales subject to GST after adjustments (G6+G7)' amount={info.g[8]} />\n            <G label='G9    GST on sales (G8 divided by eleven)' amount={info.g[9]} marginBottom={0} />\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(1A in the Summary section of the BAS)</TdRight></Tr>\n\n            {info.capitalPurchases.items.length > 0 ? <>\n                <Tr><Th width={100}>G10   Capital purchases (including any GST)</Th></Tr>\n                <GroupItems group={info.capitalPurchases} gross={true} />\n                <GroupTotal group={info.capitalPurchases} marginBottom={0} />\n            </> :\n                <G label='G10   Capital purchases (including any GST)' amount={info.g[10]} marginBottom={0} />\n            }\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(G10 on the BAS)</TdRight></Tr>\n\n            {info.purchases.items.length > 0 ? <>\n                <Tr><Th width={100}>G11   Non-capital purchases (including any GST)</Th></Tr>\n                <GroupItems group={info.purchases} gross={true} />\n                <GroupTotal group={info.purchases} marginBottom={0} />\n            </> :\n                <G label='G11   Non-capital purchases (including any GST)' amount={info.g[11]} marginBottom={0} />\n            }\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(G11 on the BAS)</TdRight></Tr>\n\n            <G label='G12   G10+G11' amount={info.g[12]} />\n\n            {info.inputTaxedPurchases.items.length > 0 ? <>\n                <Tr><Th width={100}>G13   Purchases for making input taxed sales</Th></Tr>\n                <GroupItems group={info.inputTaxedPurchases} gross={true} />\n                <GroupTotal group={info.inputTaxedPurchases} />\n            </> :\n                <G label='G13   Purchases for making input taxed sales' amount={info.g[13]} />\n            }\n\n            {info.freePurchases.items.length > 0 ? <>\n                <Tr><Th width={100}>G14   Purchases without GST in the price</Th></Tr>\n                <GroupItems group={info.freePurchases} gross={true} />\n                <GroupTotal group={info.freePurchases} />\n            </> :\n                <G label='G14   Purchases without GST in the price' amount={info.g[14]} />\n            }\n\n            <G label='G15   Estimated purchases for private use or not income tax deductible' amount={info.g[15]} />\n            <G label='G16   G13+G14+G15' amount={info.g[16]} />\n            <G label='G17   Total purchases subject to GST (G12 minus G16)' amount={info.g[17]} />\n            <G label='G18   Adjustments (if applicable)' amount={info.g[18]} />\n            <G label='G19   Total purchases subject to GST after adjustments (G7+G18)' amount={info.g[19]} />\n            <G label='G20   GST on purchases (G19 divided by eleven)' amount={info.g[20]} marginBottom={0} />\n            <Tr style={{marginBottom: 12}}><TdRight width={100}>(1B in the Summary section of the BAS)</TdRight></Tr>\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n\nfunction G({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <>\n        <Tr key={label} style={{marginBottom}}>\n            <ThLeft width={85}>{label}</ThLeft>\n            <ThRight width={15}>{toFormatted(amount, 'AUD')} AUD</ThRight>\n        </Tr>\n    </>\n}\n\nfunction SummaryG({label, amount, comment, marginBottom = 12}: {label: string, amount: number, comment?: string, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={65}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'AUD')} AUD</ThRight>\n        <TdLeft width={20} innerStyle={{marginLeft: 16}}>{comment}</TdLeft>\n    </Tr>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Transaction, datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems, TaxCodeInfo } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { LineItem, LineItemSummary } from './TaxReportCA'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype Inputs = {\n    commission: boolean, h: number, i: number\n}\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    sales: TaxItemGroup\n    purchases: TaxItemGroup\n    lines: Record<string, number>\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, inputs: Inputs) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, true, ['CA-BC:'])\n    const result: ReportInfo = { startDate, endDate,\n        sales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'CAD')\n        if (new TaxCodeInfo(item.taxCode).useTax) {\n            result.purchases.items.push(item)\n        }\n        else {\n            result.sales.items.push(item)\n        }\n    })\n\n    ;['sales', 'purchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.parentAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'CAD'}]\n            group.totals = [{amount: 0, currency: 'CAD'}]\n        }\n    })\n\n    result.lines['a'] = result.sales.totals[0].amount\n    result.lines['b'] = result.sales.taxTotals[0].amount\n\n    if (inputs.commission) {\n        if (result.lines['b'] <= 2200) {\n            result.lines['c'] = result.lines['b']\n        }\n        else if (result.lines['b'] <= 33333) {\n            result.lines['c'] = 2200\n        }\n        else {\n            result.lines['c'] = Math.min(result.lines['b'] * 0.066, 19800)\n        }\n    }\n    else {\n        result.lines['c'] = 0\n    }\n    result.lines['d'] = result.lines['b'] - result.lines['c']\n\n    result.lines['e'] = result.purchases.totals[0].amount\n    result.lines['f'] = result.purchases.taxTotals[0].amount\n    result.lines['g'] = result.lines['d'] + result.lines['f']\n\n    result.lines['h'] = inputs.h\n    result.lines['i'] = inputs.i\n    result.lines['j'] = result.lines['h'] + result.lines['i']\n\n    result.lines['k'] = result.lines['g'] - result.lines['j']\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [commission, setCommission] = React.useState<boolean>(true)\n    const [inputH, setInputH] = React.useState<string>('')\n    const [inputI, setInputI] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'CAD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {h: inputH, i: inputI}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Inputs = amounts as any // typecast\n            reportInfo(startDate, endDate, {...parsed, commission}).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, ...debounce([commission, inputH, inputI])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>BC PST Return Worksheet</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-commission'>\n            <th scope='row'>\n                <label htmlFor='commission'>Commission:</label>\n            </th><td>\n                <input type='checkbox' name='commission' checked={commission} onChange={e => {setCommission((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-inputH'>\n            <th scope='row'>\n                <label htmlFor='inputH'>[ H ] PST on Bad Debt Write-Off :</label>\n            </th><td>\n                <input name='inputH' onChange={e => {setInputH(e.target.value)}}></input> CAD\n                {formErrors['h'] && <div className='error'>{formErrors['h']}</div>}\n            </td>\n        </tr><tr className='row row-inputI'>\n            <th scope='row'>\n                <label htmlFor='inputI'>[ I ] PST on Amounts Refunded or Credited to Customers:</label>\n            </th><td>\n                <input name='inputI' onChange={e => {setInputI(e.target.value)}}></input> CAD\n                {formErrors['i'] && <div className='error'>{formErrors['i']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='bc-pst-return-worksheet.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`British Columbia PST Return Worksheet${summary ? '' : ': Detail'}`} />\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='[ A ] Total Sales and Leases' amount={info.lines['a']} />\n            <LineItemSummary label='[ B ] PST Collectable on Sales and Leases' amount={info.lines['b']} />\n            <LineItemSummary label='[ C ] Commission' amount={info.lines['c']} />\n            <LineItemSummary label='[ D ] Net PST Due on Sales and Leases' amount={info.lines['d']} />\n\n            <LineItemSummary label='[ E ] Purchase and Lease Price of Taxable Goods, Software and Services' amount={info.lines['e']} />\n            <LineItemSummary label='[ F ] PST Due on Purchases and Leases' amount={info.lines['f']} />\n            <LineItemSummary label='[ G ] PST Payable Before Adjustments' amount={info.lines['g']} />\n\n            <LineItemSummary label='[ H ] PST on Bad Debt Write-off' amount={info.lines['h']} />\n            <LineItemSummary label='[ I ] PST on Amounts Refunded or Credited to Customers' amount={info.lines['i']} />\n            <LineItemSummary label='[ J ] Total Adjustments' amount={info.lines['j']} />\n\n            <LineItemSummary label='[ K ] Total Amount Due' amount={info.lines['k']} />\n        </> : <>\n            {info.sales.items.length > 0 && <>\n                <Tr><Th width={100}>Sales</Th></Tr>\n                <GroupItems group={info.sales} />\n                <GroupTotal group={info.sales} />\n            </>}\n            <LineItem label='[ A ] Total Sales and Leases' amount={info.lines['a']} />\n            <LineItem label='[ B ] PST Collectable on Sales and Leases' amount={info.lines['b']} />\n            <LineItem label='[ C ] Commission' amount={info.lines['c']} />\n            <LineItem label='[ D ] Net PST Due on Sales and Leases' amount={info.lines['d']} />\n\n            {info.purchases.items.length > 0 && <>\n                <Tr><Th width={100}>Purchases</Th></Tr>\n                <GroupItems group={info.purchases} />\n                <GroupTotal group={info.purchases} />\n            </>}\n            <LineItem label='[ E ] Purchase and Lease Price of Taxable Goods, Software and Services' amount={info.lines['e']} />\n            <LineItem label='[ F ] PST Due on Purchases and Leases' amount={info.lines['f']} />\n            <LineItem label='[ G ] PST Payable Before Adjustments' amount={info.lines['g']} />\n\n            <LineItem label='[ H ] PST on Bad Debt Write-off' amount={info.lines['h']} />\n            <LineItem label='[ I ] PST on Amounts Refunded or Credited to Customers' amount={info.lines['i']} />\n            <LineItem label='[ J ] Total Adjustments' amount={info.lines['j']} />\n\n            <LineItem label='[ K ] Total Amount Due' amount={info.lines['k']} />\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Transaction, datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems, TaxCodeInfo } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { LineItem, LineItemSummary } from './TaxReportCA'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype Inputs = {\n    outstanding: number\n}\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    sales: TaxItemGroup\n    purchases: TaxItemGroup\n    lines: Record<string, number>\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, inputs: Inputs) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, true, ['CA-MB:'])\n    const result: ReportInfo = { startDate, endDate,\n        sales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'CAD')\n        if (new TaxCodeInfo(item.taxCode).useTax) {\n            result.purchases.items.push(item)\n        }\n        else {\n            result.sales.items.push(item)\n        }\n    })\n\n    ;['sales', 'purchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.parentAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'CAD'}]\n            group.totals = [{amount: 0, currency: 'CAD'}]\n        }\n    })\n\n    result.lines['1'] = result.sales.taxTotals[0].amount\n\n    if (result.lines['1'] <= 300) {\n        result.lines['2'] = result.lines['1']\n    }\n    else if (result.lines['1'] <= 2000) {\n        result.lines['2'] = 300\n    }\n    else if (result.lines['1'] <= 300000) {\n        if (result.lines['1'] <= 20000) {\n            result.lines['2'] = result.lines['1'] * 0.15\n        }\n        else {\n            result.lines['2'] = (result.lines['1'] - 20000) * 0.01 + (20000 * 0.15)\n        }\n    }\n    else {\n        result.lines['2'] = 0\n    }\n\n    result.lines['3'] = result.purchases.taxTotals[0].amount\n    result.lines['outstanding'] = inputs.outstanding\n    result.lines['4'] = result.lines['1'] - result.lines['2'] + result.lines['3'] + result.lines['outstanding']\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [outstanding, setOutstanding] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'CAD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {outstanding}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Inputs = amounts as any // typecast\n            reportInfo(startDate, endDate, parsed).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, ...debounce([outstanding])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>MB RST Return Worksheet</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-outstanding'>\n            <th scope='row'>\n                <label htmlFor='outstanding'>Outstanding Balance Including Interest:</label>\n            </th><td>\n                <input name='outstanding' onChange={e => {setOutstanding(e.target.value)}}></input> CAD\n                {formErrors['outstanding'] && <div className='error'>{formErrors['outstanding']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='mb-rst-return-worksheet.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`Manitoba Retail Sales Tax Return Worksheet${summary ? '' : ': Detail'}`} />\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='1. Tax Collectable On Sales' amount={info.lines['1']} />\n            <LineItemSummary label='2. Deduct Commission' amount={info.lines['2']} />\n            <LineItemSummary label='3. Tax Owing On Purchases' amount={info.lines['3']} />\n            <LineItemSummary label='Outstanding Balance Including Interest' amount={info.lines['outstanding']} />\n            <LineItemSummary label='4. TOTAL AMOUNT DUE' amount={info.lines['4']} />\n        </> : <>\n            {info.sales.items.length > 0 && <>\n                <Tr><Th width={100}>Sales</Th></Tr>\n                <GroupItems group={info.sales} />\n                <GroupTotal group={info.sales} />\n            </>}\n            <LineItem label='1. Tax Collectable On Sales' amount={info.lines['1']} />\n            <LineItem label='2. Deduct Commission' amount={info.lines['2']} />\n\n            {info.purchases.items.length > 0 && <>\n                <Tr><Th width={100}>Purchases</Th></Tr>\n                <GroupItems group={info.purchases} />\n                <GroupTotal group={info.purchases} />\n            </>}\n            <LineItem label='3. Tax Owing On Purchases' amount={info.lines['3']} />\n            <LineItem label='Outstanding Balance Including Interest' amount={info.lines['outstanding']} />\n            <LineItem label='4. TOTAL AMOUNT DUE' amount={info.lines['4']} />\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\n\nexport default function TaxReport() {\n    return <div>\n        <h1 className='title'>QC QST Return Worksheet</h1>\n        <p>Not implemented yet. Please contact the software developer or site administrator.</p>\n    </div>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Transaction, datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems, TaxCodeInfo } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { LineItem, LineItemSummary } from './TaxReportCA'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype Inputs = {\n    outstanding: number\n}\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    sales: TaxItemGroup\n    purchases: TaxItemGroup\n    lines: Record<string, number>\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, inputs: Inputs) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, true, ['CA-SK:'])\n    const result: ReportInfo = { startDate, endDate,\n        sales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'CAD')\n        if (new TaxCodeInfo(item.taxCode).useTax) {\n            result.purchases.items.push(item)\n        }\n        else {\n            result.sales.items.push(item)\n        }\n    })\n\n    ;['sales', 'purchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.parentAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'CAD'}]\n            group.totals = [{amount: 0, currency: 'CAD'}]\n        }\n    })\n\n    result.lines['a'] = result.sales.totals[0].amount\n    result.lines['b'] = result.sales.taxTotals[0].amount\n    result.lines['c'] = result.purchases.taxTotals[0].amount\n    result.lines['d'] = result.lines['b'] + result.lines['c']\n    result.lines['e'] = inputs.outstanding\n    result.lines['f'] = result.lines['d'] + result.lines['e']\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [outstanding, setOutstanding] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'CAD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {outstanding}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Inputs = amounts as any // typecast\n            reportInfo(startDate, endDate, parsed).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, ...debounce([outstanding])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>SK PST Return Worksheet</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-outstanding'>\n            <th scope='row'>\n                <label htmlFor='outstanding'>Balance Owing:</label>\n            </th><td>\n                <input name='outstanding' onChange={e => {setOutstanding(e.target.value)}}></input> CAD\n                {formErrors['outstanding'] && <div className='error'>{formErrors['outstanding']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='sk-pst-return-worksheet.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`Saskatchewan PST Return Worksheet${summary ? '' : ': Detail'}`} />\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='A    Total Sales' amount={info.lines['a']} />\n            <LineItemSummary label='B    Net Tax Collected' amount={info.lines['b']} />\n\n            <LineItemSummary label='C    Consumption Tax' amount={info.lines['c']} />\n            <LineItemSummary label='D    Net Tax Payable (B + C)' amount={info.lines['d']} />\n\n            <LineItemSummary label='E    Balance Owing' amount={info.lines['e']} />\n            <LineItemSummary label='F    Net Amount Payable (D + E)' amount={info.lines['f']} />\n        </> : <>\n            {info.sales.items.length > 0 && <>\n                <Tr><Th width={100}>Sales</Th></Tr>\n                <GroupItems group={info.sales} />\n                <GroupTotal group={info.sales} />\n            </>}\n            <LineItem label='A    Total Sales' amount={info.lines['a']} />\n            <LineItem label='B    Net Tax Collected' amount={info.lines['b']} />\n\n            {info.purchases.items.length > 0 && <>\n                <Tr><Th width={100}>Purchases</Th></Tr>\n                <GroupItems group={info.purchases} />\n                <GroupTotal group={info.purchases} />\n            </>}\n            <LineItem label='C    Consumption Tax' amount={info.lines['c']} />\n            <LineItem label='D    Net Tax Payable (B + C)' amount={info.lines['d']} />\n\n            <LineItem label='E    Balance Owing' amount={info.lines['e']} />\n            <LineItem label='F    Net Amount Payable (D + E)' amount={info.lines['f']} />\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, T, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Project, Transaction, toFormatted,\n    datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    cash: boolean\n    sales: TaxItemGroup\n    intraEuGoodsSales: TaxItemGroup\n    intraEuServicesSales: TaxItemGroup\n    purchases: TaxItemGroup\n    intraEuGoodsPurchases: TaxItemGroup\n    intraEuServicesPurchases: TaxItemGroup\n    lines: Record<string, number>\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, cash: boolean) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, !cash, ['IE:'])\n    const result: ReportInfo = { startDate, endDate, cash,\n        sales: {items: [], taxTotals: [], totals: []},\n        intraEuGoodsSales: {items: [], taxTotals: [], totals: []},\n        intraEuServicesSales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        intraEuGoodsPurchases: {items: [], taxTotals: [], totals: []},\n        intraEuServicesPurchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'EUR')\n        if (item.drcr == Transaction.Credit) {\n            result.sales.items.push(item)\n\n            if (item.taxInfo.tag == 'eu-goods') {\n                result.intraEuGoodsSales.items.push(item)\n            }\n            else if (item.taxInfo.tag == 'eu-service') {\n                result.intraEuServicesSales.items.push(item)\n            }\n        }\n        else {\n            result.purchases.items.push(item)\n\n            if (item.taxInfo.tag == 'eu-goods') {\n                result.intraEuGoodsPurchases.items.push(item)\n            }\n            else if (item.taxInfo.tag == 'eu-service') {\n                result.intraEuServicesPurchases.items.push(item)\n            }\n        }\n    })\n\n    ;['sales', 'intraEuGoodsSales', 'intraEuServicesSales',\n      'purchases', 'intraEuGoodsPurchases', 'intraEuServicesPurchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.parentAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'EUR'}]\n            group.totals = [{amount: 0, currency: 'EUR'}]\n        }\n    })\n\n    result.lines['t1'] = result.sales.taxTotals[0].amount\n    result.lines['t2'] = result.purchases.taxTotals[0].amount\n\n    if (result.lines['t1'] >= result.lines['t2']) {\n        result.lines['t3'] = result.lines['t1'] - result.lines['t2']\n        result.lines['t4'] = 0\n    }\n    else {\n        result.lines['t3'] = 0\n        result.lines['t4'] = result.lines['t2'] - result.lines['t1']\n    }\n\n    result.lines['e1'] = result.intraEuGoodsSales.totals[0].amount\n    result.lines['e2'] = result.intraEuGoodsPurchases.totals[0].amount\n    result.lines['es1'] = result.intraEuServicesSales.totals[0].amount\n    result.lines['es2'] = result.intraEuServicesPurchases.totals[0].amount\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n    const cash: boolean = Project.variables.get('ie:cash')\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    React.useEffect(() => {\n        if (startDate && endDate) {\n            reportInfo(startDate, endDate, cash).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, cash])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>VAT3 Return</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='vat3-return.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`VAT3 Return${summary ? '' : ': Detail'}`}>\n                <T style={{fontSize: 10}}>({info.cash ? 'cash receipts basis of accounting' : 'accrual'})</T>\n            </ReportHeader>\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='T1 - VAT on sales' amount={info.lines['t1']} />\n            <LineItemSummary label='T2 - VAT on purchases' amount={info.lines['t2']} />\n            <LineItemSummary label='T3 - VAT payable' amount={info.lines['t3']} />\n            <LineItemSummary label='T4 - VAT repayable' amount={info.lines['t4']} />\n\n            <LineItemSummary label='E1 - Intra-EU supplies of goods' amount={info.lines['e1']} />\n            <LineItemSummary label='E2 - Intra-EU acquisitions of goods' amount={info.lines['e2']} />\n            <LineItemSummary label='ES1 - Intra-EU supply of service' amount={info.lines['es1']} />\n            <LineItemSummary label='ES2 - Intra-EU acquisition of services' amount={info.lines['es2']} />\n        </> : <>\n            {info.sales.items.length > 0 && <>\n                <Tr><Th width={100}>Sales</Th></Tr>\n                <GroupItems group={info.sales} />\n                <GroupTotal group={info.sales} />\n            </>}\n            <LineItem label='T1 - VAT on sales' amount={info.lines['t1']} />\n\n            {info.purchases.items.length > 0 && <>\n                <Tr><Th width={100}>Purchases</Th></Tr>\n                <GroupItems group={info.purchases} />\n                <GroupTotal group={info.purchases} />\n            </>}\n            <LineItem label='T2 - VAT on purchases' amount={info.lines['t2']} />\n\n            <LineItem label='T3 - VAT payable' amount={info.lines['t3']} />\n            <LineItem label='T4 - VAT repayable' amount={info.lines['t4']} />\n\n            {info.intraEuGoodsSales.items.length > 0 && <>\n                <Tr><Th width={100}>Intra-EU supplies of goods</Th></Tr>\n                <GroupItems group={info.intraEuGoodsSales} />\n            </>}\n            <LineItem label='E1 - Intra-EU supplies of goods' amount={info.lines['e1']} />\n\n            {info.intraEuGoodsPurchases.items.length > 0 && <>\n                <Tr><Th width={100}>Intra-EU acquisitions of goods</Th></Tr>\n                <GroupItems group={info.intraEuGoodsPurchases} />\n            </>}\n            <LineItem label='E2 - Intra-EU acquisitions of goods' amount={info.lines['e2']} />\n\n            {info.intraEuServicesSales.items.length > 0 && <>\n                <Tr><Th width={100}>Intra-EU supply of service</Th></Tr>\n                <GroupItems group={info.intraEuServicesSales} />\n            </>}\n            <LineItem label='ES1 - Intra-EU supply of service' amount={info.lines['es1']} />\n\n            {info.intraEuServicesPurchases.items.length > 0 && <>\n                <Tr><Th width={100}>Intra-EU acquisition of services</Th></Tr>\n                <GroupItems group={info.intraEuServicesPurchases} />\n            </>}\n            <LineItem label='ES2 - Intra-EU acquisition of services' amount={info.lines['es2']} />\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n\nfunction LineItem({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={85}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'EUR')} EUR</ThRight>\n    </Tr>\n}\n\nfunction LineItemSummary({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={65}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'EUR')} EUR</ThRight>\n    </Tr>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, T, Tr, Th, ThLeft, ThRight } from './PDFView'\nimport { Project, Transaction, toFormatted,\n    datePresetDates, convertCurrency, exchangeRates, TaxItemGroup, taxItems } from '../core'\nimport { DateRange, ReportHeader, ExchangeRates } from './Reports'\nimport { TaxReport } from './TaxReports'\nimport { debounce, validateAmountFieldsHelper } from '../util/util'\nimport { GroupItems, GroupTotal } from './TransactionTaxes'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype ReportInfo = {\n    startDate: string\n    endDate: string\n    accrual: boolean\n    sales: TaxItemGroup\n    zeroSales: TaxItemGroup\n    purchases: TaxItemGroup\n    lines: Record<number, number>\n    refund: boolean\n    exchangeRates: {}\n}\n\nasync function reportInfo(startDate: string, endDate: string, accrual: boolean, line9: number, line13: number) : Promise<ReportInfo> {\n    const items = await taxItems(startDate, endDate, accrual, ['NZ:'])\n    const result: ReportInfo = { startDate, endDate, accrual,\n        sales: {items: [], taxTotals: [], totals: []},\n        zeroSales: {items: [], taxTotals: [], totals: []},\n        purchases: {items: [], taxTotals: [], totals: []},\n        lines: {},\n        refund: false,\n        exchangeRates: exchangeRates(),\n    }\n\n    items.forEach(item => {\n        convertCurrency(item, 'NZD')\n        if (item.drcr == Transaction.Credit) {\n            result.sales.items.push(item)\n\n            if (item.taxInfo.rate == '0') {\n                result.zeroSales.items.push(item)\n            }\n        }\n        else {\n            if (item.taxInfo.rate != '0') {\n                result.purchases.items.push(item)\n            }\n        }\n    })\n\n    ;['sales', 'zeroSales', 'purchases'].forEach(field => {\n        const group: TaxItemGroup = (result as any)[field]\n        if (group.items.length > 0) {\n            group.taxTotals = Transaction.getSums(group.items)\n            group.totals = Transaction.getSums(group.items.map(item => {\n                return {...item, amount: item.grossAmount}\n            }))\n        }\n        else {\n            group.taxTotals = [{amount: 0, currency: 'NZD'}]\n            group.totals = [{amount: 0, currency: 'NZD'}]\n        }\n    })\n\n    result.lines[5] = result.sales.totals[0].amount\n    result.lines[6] = result.zeroSales.totals[0].amount\n    result.lines[7] = result.lines[5] - result.lines[6]\n    result.lines[8] = result.lines[7] * 3 / 23\n    result.lines[9] = line9\n    result.lines[10] = result.lines[8] + result.lines[9]\n\n    result.lines[11] = result.purchases.totals[0].amount\n    result.lines[12] = result.lines[11] * 3 / 23\n    result.lines[13] = line13\n    result.lines[14] = result.lines[12] + result.lines[13]\n\n    result.lines[15] = result.lines[10] - result.lines[14]\n    if (result.lines[15] < 0) {\n        result.lines[15] = -result.lines[15]\n        result.refund = true\n    }\n\n    return result\n}\n\nexport default function TaxReport() {\n    const [summary, setSummary] = React.useState<boolean>(true)\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [line9, setLine9] = React.useState<string>('')\n    const [line13, setLine13] = React.useState<string>('')\n    const [formErrors, setFormErrors] = React.useState<Record<string, string>>({})\n    const [info, setInfo] = React.useState<ReportInfo>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n    const accrual: boolean = Project.variables.get('nz:accrual')\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function validate(data: Record<string, string>): boolean {\n        const errors = validateAmountFieldsHelper(Object.keys(data), 'NZD', data)\n        setFormErrors(errors)\n        return Object.keys(errors).length == 0\n    }\n\n    React.useEffect(() => {\n        const amounts = {line9, line13}\n        if (validate(amounts) && startDate && endDate) {\n            const parsed: Record<string, number> = amounts as any // typecast\n            reportInfo(startDate, endDate, accrual, parsed.line9, parsed.line13).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, accrual, ...debounce([line9, line13])])\n\n    const report = React.useMemo(() => {\n        return info ? renderReport(info, summary) : null\n    }, [info && nonce ? nonce : 0, summary])\n\n    return <div>\n        <h1 className='title'>GST101A helper</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-summary'>\n            <th scope='row'>\n                <label htmlFor='summary'>Summary:</label>\n            </th><td>\n                <input type='checkbox' name='summary' checked={summary} onChange={e => {setSummary((e.target.checked))}} />\n            </td>\n        </tr><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-line9'>\n            <th scope='row'>\n                <label htmlFor='line9'>[ &nbsp;&nbsp;9 ] Adjustments from your calculation sheet:</label>\n            </th><td>\n                <input name='line9' onChange={e => {setLine9(e.target.value)}}></input> NZD\n                {formErrors['line9'] && <div className='error'>{formErrors['line9']}</div>}\n            </td>\n        </tr><tr className='row row-line13'>\n            <th scope='row'>\n                <label htmlFor='line13'>[ 13 ] Credit adjustments from your calculation sheet:</label>\n            </th><td>\n                <input name='line13' onChange={e => {setLine13(e.target.value)}}></input> NZD\n                {formErrors['line13'] && <div className='error'>{formErrors['line13']}</div>}\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='gst-101A-helper.pdf'>{report}</PDFView>}\n    </div>\n}\n\nfunction renderReport(info: ReportInfo, summary: boolean) {\n    return <Document><Page size=\"A4\" style={[Styles.page, {fontSize: summary ? 9 : 8}]}>\n        <View fixed={true}>\n            <ReportHeader startDate={info.startDate} endDate={info.endDate} title={`GST101A${summary ? '' : ': Detail'}`}>\n                <T style={{fontSize: 10}}>({info.accrual ? 'invoice' : 'payments'} basis)</T>\n            </ReportHeader>\n            {!summary && <Tr key='header' style={{marginBottom: 6}}>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount + Tax</ThRight>\n            </Tr>}\n        </View>\n\n        {summary ? <>\n            <LineItemSummary label='[  5 ]    Total sales and income (including GST)' amount={info.lines[5]} />\n            <LineItemSummary label='[  6 ]    Zero-rated supplies' amount={info.lines[6]} />\n            <LineItemSummary label='[  7 ]    Subtract Box 6 from Box 5' amount={info.lines[7]} />\n            <LineItemSummary label='[  8 ]    Multiply Box 7 by three and then divide by twenty-three' amount={info.lines[8]} />\n            <LineItemSummary label='[  9 ]    Adjustments from your calculation sheet' amount={info.lines[9]} />\n            <LineItemSummary label='[ 10 ]    Total GST collected (Add Box 8 and Box 9)' amount={info.lines[10]} />\n            <LineItemSummary label='[ 11 ]    Total purchases and expenses (including GST)' amount={info.lines[11]} />\n            <LineItemSummary label='[ 12 ]    Multiply Box 11 by three and then divide by twenty-three' amount={info.lines[12]} />\n            <LineItemSummary label='[ 13 ]    Credit adjustments from your calculation sheet' amount={info.lines[13]} />\n            <LineItemSummary label='[ 14 ]    Total GST credit (Add Box 12 and Box 13)' amount={info.lines[14]} />\n            <LineItemSummary label='[ 15 ]    Difference between Box 10 and Box 14' amount={info.lines[15]} marginBottom={3} />\n            <Tr><ThRight width={80}>({info.refund ? 'Refund' : 'GST to pay'})</ThRight></Tr>\n        </> : <>\n            {info.sales.items.length > 0 ? <>\n                <Tr><Th width={100}>[  5 ]    Total sales and income (including GST)</Th></Tr>\n                <GroupItems group={info.sales} gross={true} />\n                <GroupTotal group={info.sales} />\n            </> :\n                <LineItem label='[  5 ]    Total sales and income (including GST)' amount={info.lines[5]} />\n            }\n\n            {info.zeroSales.items.length > 0 ? <>\n                <Tr><Th width={100}>[  6 ]    Zero-rated supplies</Th></Tr>\n                <GroupItems group={info.zeroSales} gross={true} />\n                <GroupTotal group={info.zeroSales} />\n            </> :\n                <LineItem label='[  6 ]    Zero-rated supplies' amount={info.lines[6]} />\n            }\n\n            <LineItem label='[  7 ]    Subtract Box 6 from Box 5' amount={info.lines[7]} />\n            <LineItem label='[  8 ]    Multiply Box 7 by three and then divide by twenty-three' amount={info.lines[8]} />\n            <LineItem label='[  9 ]    Adjustments from your calculation sheet' amount={info.lines[9]} />\n            <LineItem label='[ 10 ]    Total GST collected (Add Box 8 and Box 9)' amount={info.lines[10]} />\n\n            {info.purchases.items.length > 0 ? <>\n                <Tr><Th width={100}>[ 11 ]    Total purchases and expenses (including GST)</Th></Tr>\n                <GroupItems group={info.purchases} gross={true} />\n                <GroupTotal group={info.purchases} />\n            </> :\n                <LineItem label='[ 11 ]    Total purchases and expenses (including GST)' amount={info.lines[11]} />\n            }\n\n            <LineItem label='[ 12 ]    Multiply Box 11 by three and then divide by twenty-three' amount={info.lines[12]} />\n            <LineItem label='[ 13 ]    Credit adjustments from your calculation sheet' amount={info.lines[13]} />\n            <LineItem label='[ 14 ]    Total GST credit (Add Box 12 and Box 13)' amount={info.lines[14]} />\n            <View wrap={false}>\n                <LineItem label='[ 15 ]    Difference between Box 10 and Box 14' amount={info.lines[15]} marginBottom={3} />\n                <Tr><ThRight width={100}>({info.refund ? 'Refund' : 'GST to pay'})</ThRight></Tr>\n            </View>\n        </>}\n\n        <ExchangeRates rates={info.exchangeRates} />\n    </Page></Document>\n}\n\nfunction LineItem({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={85}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'NZD')} NZD</ThRight>\n    </Tr>\n}\n\nfunction LineItemSummary({label, amount, marginBottom = 12}: {label: string, amount: number, marginBottom?: number}) {\n    return <Tr key={label} style={{marginBottom}}>\n        <ThLeft width={65}>{label}</ThLeft>\n        <ThRight width={15}>{toFormatted(amount, 'NZD')} NZD</ThRight>\n    </Tr>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { StyleSheet, View, Text } from './PDFView'\n\nexport const Styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        padding: 56,        // approx 2cm\n        paddingBottom: 64,\n    },\n})\n\n// Custom primitives on top of react-pdf\nexport function T({children, style}: any) {\n    return <Text style={[{fontFamily: 'Helvetica'}, style]}>{children}</Text>\n}\n\nexport function B({children, style}: any) {\n    return <Text style={[{fontFamily: 'Helvetica-Bold'}, style]}>{children}</Text>\n}\n\nexport function I({children, style}: any) {\n    return <Text style={[{fontFamily: 'Helvetica-Oblique'}, style]}>{children}</Text>\n}\n\nexport function Tr({children, style}: any) {\n    return <View style={[{flexDirection: 'row', marginHorizontal: 'auto'}, style]} wrap={false}>{children}</View>\n}\n\nexport function Th({children, style, innerStyle, width, indent}: any) {\n    const style0: any = {}\n    if (width) {\n        style0.width = `${width}%`\n    }\n    if (indent) {\n        style0.marginLeft = `${indent}%`\n    }\n    return <View style={[style0, style]}><B style={[{\n        borderStyle: 'solid',\n        borderColor: '#333',\n    }, innerStyle]}>{children}</B></View>\n}\n\nexport function ThLeft(props: any) {\n    const {innerStyle, ...rest} = props\n    return <Th innerStyle={[{\n        marginRight: 6,\n        textAlign: 'left',\n    }, innerStyle]} {...rest} />\n}\n\nexport function ThRight(props: any) {\n    const {innerStyle, ...rest} = props\n    return <Th innerStyle={[{\n        marginLeft: 6,\n        textAlign: 'right',\n    }, innerStyle]} {...rest} />\n}\n\nexport function Td({children, style, innerStyle, width, indent}: any) {\n    const style0: any = {}\n    if (width) {\n        style0.width = `${width}%`\n    }\n    if (indent) {\n        style0.marginLeft = `${indent}%`\n    }\n    return <View style={[style0, style]}><T style={[{\n        borderStyle: 'solid',\n        borderColor: '#333',\n    }, innerStyle]}>{children}</T></View>\n}\n\nexport function TdLeft(props: any) {\n    const {innerStyle, ...rest} = props\n    return <Td innerStyle={[{\n        marginRight: 6,\n        textAlign: 'left',\n    }, innerStyle]} {...rest} />\n}\n\nexport function TdRight(props: any) {\n    const {innerStyle, ...rest} = props\n    return <Td innerStyle={[{\n        marginLeft: 6,\n        textAlign: 'right',\n    }, innerStyle]} {...rest} />\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { BlobParamsAndFilename } from '../components/PDFView'\n\nexport default function PDFDownloadLink(props: BlobParamsAndFilename) {\n    return <a className='pdf-download-link'\n        download={props.filename ? props.filename : 'document.pdf'}\n        href={props.url!}>Save PDF</a>\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, BlobProvider, StyleSheet, View, Text } from '@react-pdf/renderer'\nexport { Document, Page, StyleSheet, View, Text }\nexport * from './PDF'\n\nconst pdfjsWebViewer = require('pdfjs-dist/web/pdf_viewer.js')\nimport 'pdfjs-dist/web/pdf_viewer.css'\n\n// Beware: These have been hand-patched so they don't use Promise.allSettled.\n// The .min.js versions may not have been hand-patched\nconst pdfjsWorker = require('pdfjs-dist/build/pdf.worker.js')\nconst pdfjs = require(\"pdfjs-dist/build/pdf.js\")\n\nimport PDFDownloadLink from './PDFDownloadLink'\n\n// See 'pdfjs-dist/webpack.js'\nif (typeof window !== \"undefined\" && \"Worker\" in window) {\n    pdfjs.GlobalWorkerOptions.workerPort = new pdfjsWorker()\n}\n\ntype BlobParams = {\n    blob: Blob | null\n    url: string | null\n    loading: boolean\n    error: Error | null\n}\n\nexport type BlobParamsAndFilename = BlobParams & {filename?: string}\n\nexport function PDFView(props: {_key?: any, children: any, filename?: string}) {\n    return <BlobProvider key={props._key} document={props.children}>\n        {(params: BlobParams) => {\n            return <Viewer key={params.url!} {...params} filename={props.filename}/>\n        }}\n    </BlobProvider>\n}\n\nexport default PDFView\n\nexport function Viewer(props: BlobParamsAndFilename) {\n    const container = React.useRef(null)\n    const [scale, setScale] = React.useState<number>(1)\n    const [viewer, setViewer] = React.useState<any>()\n\n    React.useEffect(() => {\n        let mounted = true\n\n        if (mounted && props.url) {\n            const eventBus = new pdfjsWebViewer.EventBus()\n            eventBus.on('pagesinit', (e: any) => {\n                setScale(e.source.currentScale)\n            })\n\n            const pdfViewer = new pdfjsWebViewer.PDFViewer({\n                container: container.current,\n                eventBus,\n            })\n            setViewer(pdfViewer)\n\n            const loadingTask = pdfjs.getDocument(props.url)\n            loadingTask.promise.then((document: any) => {\n                if (mounted) {\n                    pdfViewer.setDocument(document)\n                }\n            })\n        }\n\n        return () => {mounted=false}\n    }, [props.url])\n\n    function zoom(delta: number) {\n        viewer.currentScale += delta\n        setScale(viewer.currentScale)\n    }\n\n    return props.url ? <>\n        <div className=\"pdfViewer-toolbar\">\n            <PDFDownloadLink {...props} />\n            <button className=\"zoom-button zoom-in\" onClick={(e) => zoom(-0.1)}>-</button>\n            <button className=\"zoom-button zoom-out\" onClick={(e) => zoom(0.1)}>+</button>\n            <span className=\"zoom-percent\">{(scale * 100).toFixed(1)}%</span>\n        </div>\n        <div ref={container} className=\"pdfViewer-container\">\n            <div className=\"pdfViewer\"></div>\n        </div>\n    </> : null\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { isFirstDayOfMonth, isLastDayOfMonth, isSameMonth, isSameYear } from 'date-fns'\nimport DatePicker from 'react-datepicker'\nimport { LOCALE, Project, parseISO, toDateOnly, dateFormatString as dfs } from '../core'\nimport { View, B, T } from './PDFView'\n\n// Keep lists of currencies together (ie. no wrapping) unless there are a lot of them\nexport const CURRENCY_TOTALS_WRAP = 7\n\ntype DateRangeSelectProps = {\n    startDate: string\n    endDate: string\n    onChange?: (startDate: string, endDate: string) => void\n}\n\nexport function DateRange(props: DateRangeSelectProps) {\n    const {startDate, endDate} = props\n    const parsedStartDate = startDate ? parseISO(startDate) : null\n    const parsedEndDate = endDate ? parseISO(endDate) : null\n\n    return <>\n        <span className='date-range date-range-start'>\n            <label htmlFor='startDate'>From:</label>\n            <DatePicker\n                name='startDate'\n                selected={parsedStartDate}\n                onChange={(date: Date) => {\n                    const dateOnly = date ? toDateOnly(date) : ''\n                    if (props.onChange) {\n                        props.onChange(dateOnly, endDate)\n                    }\n                }}\n                selectsStart\n                startDate={parsedStartDate}\n                endDate={parsedEndDate}\n                dateFormat={dfs()}\n            />\n        </span><span className='date-range date-range-end'>\n            <label htmlFor='endDate'>To:</label>\n            <DatePicker\n                name='endDate'\n                selected={parsedEndDate}\n                onChange={(date: Date) => {\n                    const dateOnly = date ? toDateOnly(date) : ''\n                    if (props.onChange) {\n                        props.onChange(startDate, dateOnly)\n                    }\n                }}\n                selectsEnd\n                startDate={parsedStartDate}\n                endDate={parsedEndDate}\n                dateFormat={dfs()}\n            />\n        </span>\n    </>\n}\n\ntype ReportHeaderProps = {\n    title: string\n    startDate?: string\n    endDate: string\n    children?: any\n}\n\nexport function ReportHeader(props: ReportHeaderProps) {\n    const format = dfs()\n    const monthBeforeDate = format[0] == 'm' || format[0] == 'M'\n    const endDate = parseISO(props.endDate)\n    let interval: string\n\n    if (!props.startDate) {\n        interval = `${endDate.toLocaleDateString(LOCALE, {day: 'numeric', month: 'long', year: 'numeric'})}`\n    }\n    else {\n        const startDate = parseISO(props.startDate)\n\n        if (isSameMonth(startDate, endDate)) {\n            if (isFirstDayOfMonth(startDate) && isLastDayOfMonth(endDate)) {\n                interval = `${startDate.toLocaleDateString(LOCALE, {month: 'long', year: 'numeric'})}`\n            }\n            else {\n                if (monthBeforeDate) {\n                    interval = `${startDate.toLocaleDateString(LOCALE, {day: 'numeric', month: 'long'})} to ${endDate.toLocaleDateString(LOCALE, {day: 'numeric'})}, ${endDate.toLocaleDateString(LOCALE, {year: 'numeric'})}`\n                }\n                else {\n                    interval = `${startDate.toLocaleDateString(LOCALE, {day: 'numeric'})} to ${endDate.toLocaleDateString(LOCALE, {day: 'numeric', month: 'long', year: 'numeric'})}`\n                }\n            }\n        }\n        else {\n            const startOptions: any = {day: 'numeric', month: 'long', year: 'numeric'}\n            const endOptions: any = {day: 'numeric', month: 'long', year: 'numeric'}\n\n            if (isSameYear(startDate, endDate)) {\n                delete startOptions.year\n            }\n            if (isFirstDayOfMonth(startDate)) {\n                delete startOptions.day\n            }\n            if (isLastDayOfMonth(endDate)) {\n                delete endOptions.day\n            }\n            interval = `${startDate.toLocaleDateString(LOCALE, startOptions)} to ${endDate.toLocaleDateString(LOCALE, endOptions)}`\n        }\n    }\n\n    const now = new Intl.DateTimeFormat(LOCALE, {\n        year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric'\n    }).format(new Date())\n\n    return <View>\n        <View style={{position: 'absolute', top: 0, textAlign: 'right'}}>\n            <T>{now}</T>\n        </View>\n        <View style={{textAlign: 'center', marginBottom: 12}}>\n            <B style={{fontSize: 12}}>{Project.variables.get('title')}</B>\n            <B style={{fontSize: 18}}>{props.title}</B>\n            <T style={{fontSize: 12}}>{interval}</T>\n            {props.children}\n        </View>\n    </View>\n}\n\nexport function ExchangeRates({rates}: {rates: Record<string, Record<string, string>>}) {\n    const lines: string[] = []\n    Object.keys(rates || {}).forEach(primary => {\n        const parts = [`1 ${primary}`]\n        Object.keys(rates[primary] || {}).forEach(other => {\n            if (rates[primary][other]) {\n                parts.push(`${rates[primary][other]} ${other}`)\n            }\n        })\n\n        if (parts.length > 1) {\n            lines.push(parts.join(' = '))\n        }\n    })\n\n    return lines.length > 0 ? <View style={{\n        textAlign: 'right',\n        position: 'absolute',\n        bottom: 56, left: 56, right: 56,\n        borderStyle: 'solid', borderColor: '#333', borderTopWidth: 1,\n    }}>\n        {lines.map((line, index) =>\n            <T key={index} style={{fontSize: 8}}>{line}</T>)\n        }\n    </View> : null\n}\n","/**\n * Copyright (c) 2020-present Beng Tan\n */\n\nimport * as React from 'react'\nimport { Document, Page, View, PDFView, Styles, T, Tr, Th, ThLeft, ThRight, Td, TdLeft, TdRight } from './PDFView'\nimport { Transaction, formatDateOnly, toFormatted, datePresetDates, TaxAuthority, taxAuthorities, TaxItemGroup, taxItems } from '../core'\nimport { CURRENCY_TOTALS_WRAP, DateRange, ReportHeader } from './Reports'\nimport { orderByField } from '../util/util'\nimport { datePresetSelectOptions } from './SelectOptions'\n\ntype Division = {\n    authority: TaxAuthority\n    id: string\n    region: string\n    outputs: TaxItemGroup\n    inputs: TaxItemGroup\n}\n\ntype TransactionTaxes = {\n    startDate: string\n    endDate: string\n    accrual: boolean\n    authorities: Division[]\n}\n\nexport async function transactionTaxes(startDate: string, endDate: string, accrual = true) : Promise<TransactionTaxes> {\n    const items = await taxItems(startDate, endDate, accrual)\n    const result: TransactionTaxes = {\n        startDate,\n        endDate,\n        accrual,\n        authorities: []\n    }\n    const authorities: Record<string, Division> = {}\n\n    items.forEach(item => {\n        if (!authorities[item.taxInfo.authority]) {\n            authorities[item.taxInfo.authority] = {\n                authority: taxAuthorities[item.taxInfo.authority],\n                id: item.taxInfo.authority,\n                region: taxAuthorities[item.taxInfo.authority].regionName,\n                outputs: { items: [], taxTotals: [], totals: [] },\n                inputs: { items: [], taxTotals: [], totals: [] },\n            }\n        }\n\n        if (item.drcr == Transaction.Credit) {\n            authorities[item.taxInfo.authority].outputs.items.push(item)\n        }\n        else {\n            authorities[item.taxInfo.authority].inputs.items.push(item)\n        }\n    })\n\n    result.authorities = Object.keys(authorities).map(k => authorities[k])\n    result.authorities.sort(orderByField('region'))\n\n    result.authorities.forEach(division => {\n        division.outputs.taxTotals = Transaction.getSums(division.outputs.items)\n        division.inputs.taxTotals = Transaction.getSums(division.inputs.items)\n\n        division.outputs.totals = Transaction.getSums(division.outputs.items.map(item => {\n            return {...item, amount: item.parentAmount}\n        }))\n        division.inputs.totals = Transaction.getSums(division.inputs.items.map(item => {\n            return {...item, amount: item.parentAmount}\n        }))\n    })\n\n    return result\n}\n\nexport default function TransactionTaxesDetail() {\n    const [preset, setPreset] = React.useState<string>('')\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [endDate, setEndDate] = React.useState<string>('')\n    const [cashBasis, setCashBasis] = React.useState<boolean>(false)\n    const [info, setInfo] = React.useState<TransactionTaxes>()\n    const [error, setError] = React.useState<string>('')\n    const [nonce, setNonce] = React.useState<number>(0)\n\n    function onPresetChange(e: any) {\n        const value = e.target.value\n        setPreset(value)\n\n        if (value != 'custom') {\n            const range = datePresetDates(value)\n            setStartDate(range[0])\n            setEndDate(range[1])\n        }\n    }\n\n    function onDateChange(startDate: string, endDate: string) {\n        setStartDate(startDate)\n        setEndDate(endDate)\n    }\n\n    function onCashBasisChange(e: any) {\n        setCashBasis(e.target.checked)\n    }\n\n    React.useEffect(() => {\n        if (startDate && endDate) {\n            transactionTaxes(startDate, endDate, !cashBasis).then(data => {\n                setInfo(data)\n                setError('')\n                setNonce(Date.now())\n            }).catch(e => {\n                setError(e.toString())\n            })\n        }\n    }, [startDate, endDate, cashBasis])\n\n    const report = React.useMemo(() => {\n        return info ? <Document><Page size=\"A4\" style={[Styles.page, {fontSize: 8}]}>\n            <View fixed={true}>\n                <ReportHeader startDate={info.startDate} endDate={info.endDate} title='Transaction Tax: Detail'>\n                    <T style={{fontSize: 10}}>({info.accrual ? 'Accrual' : 'Cash'} accounting basis)</T>\n                </ReportHeader>\n                <Tr key='header' style={{marginBottom: 6}}>\n                    <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Item</ThLeft>\n                    <ThLeft width={10} innerStyle={{borderBottomWidth: 1}}>Date</ThLeft>\n                    <ThLeft width={14} innerStyle={{borderBottomWidth: 1}}>Name</ThLeft>\n                    <ThLeft width={22} innerStyle={{borderBottomWidth: 1}}>Description</ThLeft>\n                    <Th width={8} innerStyle={{borderBottomWidth: 1}}>Tax Code</Th>\n                    <ThRight width={7} innerStyle={{borderBottomWidth: 1}}>Rate</ThRight>\n                    <ThRight width={10} innerStyle={{borderBottomWidth: 1}}>Tax</ThRight>\n                    <ThRight width={15} innerStyle={{borderBottomWidth: 1}}>Amount</ThRight>\n                </Tr>\n            </View>\n\n            {info.authorities.map(division => <React.Fragment key={division.authority.id}>\n                <Tr><Th width={100}>{division.authority.regionName}</Th></Tr>\n                {division.outputs.items.length > 0 && <>\n                    <Tr><Th width={98} indent={2}>Tax Payable</Th></Tr>\n                    <GroupItems group={division.outputs} />\n                    <GroupTotal group={division.outputs} />\n                </>}\n                {division.inputs.items.length > 0 && <>\n                    <Tr><Th width={98} indent={2}>Tax Receivable</Th></Tr>\n                    <GroupItems group={division.inputs} />\n                    <GroupTotal group={division.inputs} />\n                </>}\n            </React.Fragment>)}\n        </Page></Document> : null\n    }, [info && nonce ? nonce : 0])\n\n    return <div>\n        <h1 className='title'>Transaction Tax: Detail</h1>\n        <table className='horizontal-table-form'><tbody><tr className='row row-date-preset'>\n            <th scope='row'>\n                <label htmlFor='preset'>Date:</label>\n            </th><td>\n                <select name='preset' value={preset} onChange={onPresetChange}>\n                    {!preset && <option key='' value=''></option>}\n                    {datePresetSelectOptions()}\n                </select>\n                {preset == 'custom' && <DateRange onChange={onDateChange} startDate={startDate} endDate={endDate} />}\n            </td>\n        </tr><tr className='row row-cash-basis'>\n            <th scope='row'>\n                <label htmlFor='cashBasis'>Cash accounting basis:</label>\n            </th><td>\n                <input type='checkbox' name='cashBasis' checked={cashBasis} onChange={onCashBasisChange} />\n            </td>\n        </tr></tbody></table>\n\n        {error && <div className='error'>{error}</div>}\n        {report && <PDFView _key={nonce} filename='transaction-tax-detail.pdf'>{report}</PDFView>}\n    </div>\n}\n\nexport function GroupItems({group, gross, indent = 4}: {group: TaxItemGroup, gross?: boolean, indent?: number}) {\n    return group.items.map((item, index) => <Tr key={item.id}>\n        <TdLeft width={14 - indent} indent={indent}>{Transaction.TypeInfo[item.txnType].shortLabel} {item.txnId}</TdLeft>\n        <Td width={10} innerStyle={{marginRight: 6, textAlign: 'right'}}>{formatDateOnly(item.txnDate)}</Td>\n        <TdLeft width={14} innerStyle={{maxLines: 1}}>{item.actorTitle}</TdLeft>\n        <TdLeft width={22} innerStyle={{maxLines: 2}}>{\n                !item.txnDescription ? item.parentDescription :\n                !item.parentDescription ? item.txnDescription :\n                `${item.txnDescription}: ${item.parentDescription}`\n        }</TdLeft>\n        <Td width={8} innerStyle={{maxLines: 2}}>{item.taxInfo.reportLabel}</Td>\n        <TdRight width={7}>{item.taxInfo.rate}%</TdRight>\n        <TdRight width={10} innerStyle={index == group.items.length - 1 ? {\n            marginBottom: 3,\n            paddingBottom: 3,\n            borderBottomWidth: 1,\n        } : {}}>{toFormatted(item.amount, item.currency)}</TdRight>\n        <TdRight width={15} innerStyle={index == group.items.length - 1 ? {\n            marginBottom: 3,\n            paddingBottom: 3,\n            borderBottomWidth: 1,\n        } : {}}>{toFormatted(gross ? item.grossAmount : item.parentAmount, item.currency)} {item.currency}</TdRight>\n    </Tr>) as any\n}\n\nexport function GroupTotal({label, group, indent = 2, marginBottom = 12}: {label?: string, group: TaxItemGroup, indent?: number, marginBottom?: number}) {\n    return <View wrap={group.totals.length > CURRENCY_TOTALS_WRAP}>\n    {group.totals.map((money, index) => {\n        const taxMoney = group.taxTotals[index]\n        return <Tr key={money.currency} style={index == group.totals.length-1 ? {\n            marginBottom,\n        } : {}}>\n            <ThLeft width={75 - indent} indent={indent}>{index == 0 && label ? label : ''}</ThLeft>\n            <ThRight width={10}>{toFormatted(taxMoney.amount, taxMoney.currency)}</ThRight>\n            <ThRight width={15}>\n                {toFormatted(money.amount, money.currency)} {money.currency}\n            </ThRight>\n        </Tr>\n    })}\n    </View>\n}\n"],"sourceRoot":""}